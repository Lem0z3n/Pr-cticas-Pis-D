   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"lab12-foreback.c"
  21              	.Ltext0:
  22              		.file 1 "../lab12-foreback.c"
 2147              		.align	2
 2148              	.LC0:
 2149 0000 0A0A2045 		.ascii	"\012\012 Ejecutando una aplicaci\363n foreground/ba"
 2149      6A656375 
 2149      74616E64 
 2149      6F20756E 
 2149      61206170 
 2150 002a 636B6772 		.ascii	"ckground\012\000"
 2150      6F756E64 
 2150      0A00
 2151              		.align	2
 2152              	.LC1:
 2153 0034 202D2D2D 		.ascii	" -----------------------------------------------\012"
 2153      2D2D2D2D 
 2153      2D2D2D2D 
 2153      2D2D2D2D 
 2153      2D2D2D2D 
 2154 0065 0A00     		.ascii	"\012\000"
 2155              		.text
 2156              		.align	2
 2157              		.global	main
 2159              	main:
 2160              	.LFB0:
   1:../lab12-foreback.c **** /*-------------------------------------------------------------------
   2:../lab12-foreback.c **** **
   3:../lab12-foreback.c **** **  Fichero:
   4:../lab12-foreback.c **** **    lab12-foreback.c  14/1/2021
   5:../lab12-foreback.c **** **
   6:../lab12-foreback.c **** **    (c) J.M. Mendias
   7:../lab12-foreback.c **** **    Programación de Sistemas y Dispositivos
   8:../lab12-foreback.c **** **    Facultad de Informática. Universidad Complutense de Madrid
   9:../lab12-foreback.c **** **
  10:../lab12-foreback.c **** **  Propósito:
  11:../lab12-foreback.c **** **    Ejemplo de una aplicación guiada por tiempo con arquitectura
  12:../lab12-foreback.c **** **    foreground/background
  13:../lab12-foreback.c **** **
  14:../lab12-foreback.c **** **  Notas de diseño:
  15:../lab12-foreback.c **** **
  16:../lab12-foreback.c **** **-----------------------------------------------------------------*/
  17:../lab12-foreback.c **** 
  18:../lab12-foreback.c **** #include <s3c44b0x.h>
  19:../lab12-foreback.c **** #include <s3cev40.h>
  20:../lab12-foreback.c **** #include <common_types.h>
  21:../lab12-foreback.c **** #include <system.h>
  22:../lab12-foreback.c **** #include <leds.h>
  23:../lab12-foreback.c **** #include <segs.h>
  24:../lab12-foreback.c **** #include <uart.h>
  25:../lab12-foreback.c **** #include <pbs.h>
  26:../lab12-foreback.c **** #include <keypad.h>
  27:../lab12-foreback.c **** #include <timers.h>
  28:../lab12-foreback.c **** #include <rtc.h>
  29:../lab12-foreback.c **** #include <lcd.h>
  30:../lab12-foreback.c **** 
  31:../lab12-foreback.c **** #define TICKS_PER_SEC   (100)
  32:../lab12-foreback.c **** 
  33:../lab12-foreback.c **** /* Declaración de recursos */
  34:../lab12-foreback.c **** 
  35:../lab12-foreback.c **** uint8 scancode;
  36:../lab12-foreback.c **** boolean flagTask5;
  37:../lab12-foreback.c **** boolean flagTask6;
  38:../lab12-foreback.c **** boolean flagTask8;
  39:../lab12-foreback.c **** 
  40:../lab12-foreback.c **** volatile boolean flagPb;
  41:../lab12-foreback.c **** volatile boolean flagToggleLeds;
  42:../lab12-foreback.c **** volatile boolean flagReadKeypad;
  43:../lab12-foreback.c **** volatile boolean flagWriteRTC;
  44:../lab12-foreback.c **** volatile boolean flagWriteTicks;
  45:../lab12-foreback.c **** 
  46:../lab12-foreback.c **** /* Declaración de tareas */
  47:../lab12-foreback.c **** 
  48:../lab12-foreback.c **** void Task1( void );
  49:../lab12-foreback.c **** void Task2( void );
  50:../lab12-foreback.c **** void Task3( void );
  51:../lab12-foreback.c **** void Task4( void );
  52:../lab12-foreback.c **** void Task5( void );
  53:../lab12-foreback.c **** void Task6( void );
  54:../lab12-foreback.c **** void Task7( void );
  55:../lab12-foreback.c **** 
  56:../lab12-foreback.c **** /* Declaración de RTI */
  57:../lab12-foreback.c **** 
  58:../lab12-foreback.c **** void isr_pb( void ) __attribute__ ((interrupt ("IRQ")));
  59:../lab12-foreback.c **** void isr_tick( void ) __attribute__ ((interrupt ("IRQ")));
  60:../lab12-foreback.c **** 
  61:../lab12-foreback.c **** /*******************************************************************/
  62:../lab12-foreback.c **** 
  63:../lab12-foreback.c **** void main( void )
  64:../lab12-foreback.c **** {
 2161              		.loc 1 64 0
 2162              		.cfi_startproc
 2163              		@ Function supports interworking.
 2164              		@ args = 0, pretend = 0, frame = 0
 2165              		@ frame_needed = 1, uses_anonymous_args = 0
 2166 0000 0DC0A0E1 		mov	ip, sp
 2167              	.LCFI0:
 2168              		.cfi_def_cfa_register 12
 2169 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2170 0008 04B04CE2 		sub	fp, ip, #4
 2171              		.cfi_offset 14, -8
 2172              		.cfi_offset 13, -12
 2173              		.cfi_offset 11, -16
 2174              	.LCFI1:
 2175              		.cfi_def_cfa 11, 4
  65:../lab12-foreback.c ****     sys_init();      /* Inicializa el sistema */
 2176              		.loc 1 65 0
 2177 000c FEFFFFEB 		bl	sys_init
  66:../lab12-foreback.c ****     timers_init();
 2178              		.loc 1 66 0
 2179 0010 FEFFFFEB 		bl	timers_init
  67:../lab12-foreback.c ****     uart0_init();
 2180              		.loc 1 67 0
 2181 0014 FEFFFFEB 		bl	uart0_init
  68:../lab12-foreback.c ****     leds_init();
 2182              		.loc 1 68 0
 2183 0018 FEFFFFEB 		bl	leds_init
  69:../lab12-foreback.c ****     segs_init();
 2184              		.loc 1 69 0
 2185 001c FEFFFFEB 		bl	segs_init
  70:../lab12-foreback.c ****     rtc_init();
 2186              		.loc 1 70 0
 2187 0020 FEFFFFEB 		bl	rtc_init
  71:../lab12-foreback.c ****     pbs_init();
 2188              		.loc 1 71 0
 2189 0024 FEFFFFEB 		bl	pbs_init
  72:../lab12-foreback.c ****     keypad_init();
 2190              		.loc 1 72 0
 2191 0028 FEFFFFEB 		bl	keypad_init
  73:../lab12-foreback.c ****     lcd_init();
 2192              		.loc 1 73 0
 2193 002c FEFFFFEB 		bl	lcd_init
  74:../lab12-foreback.c **** 
  75:../lab12-foreback.c ****     lcd_clear();
 2194              		.loc 1 75 0
 2195 0030 FEFFFFEB 		bl	lcd_clear
  76:../lab12-foreback.c ****     lcd_on();
 2196              		.loc 1 76 0
 2197 0034 FEFFFFEB 		bl	lcd_on
  77:../lab12-foreback.c **** 
  78:../lab12-foreback.c ****     uart0_puts( "\n\n Ejecutando una aplicación foreground/background\n" );
 2198              		.loc 1 78 0
 2199 0038 E8019FE5 		ldr	r0, .L12
 2200 003c FEFFFFEB 		bl	uart0_puts
  79:../lab12-foreback.c ****     uart0_puts( " -----------------------------------------------\n\n" ) ;
 2201              		.loc 1 79 0
 2202 0040 E4019FE5 		ldr	r0, .L12+4
 2203 0044 FEFFFFEB 		bl	uart0_puts
  80:../lab12-foreback.c ****     
  81:../lab12-foreback.c ****     flagTask5      = FALSE;    /* Inicializa flags */
 2204              		.loc 1 81 0
 2205 0048 E0319FE5 		ldr	r3, .L12+8
 2206 004c 0020A0E3 		mov	r2, #0
 2207 0050 0020C3E5 		strb	r2, [r3, #0]
  82:../lab12-foreback.c ****     flagTask6      = FALSE;
 2208              		.loc 1 82 0
 2209 0054 D8319FE5 		ldr	r3, .L12+12
 2210 0058 0020A0E3 		mov	r2, #0
 2211 005c 0020C3E5 		strb	r2, [r3, #0]
  83:../lab12-foreback.c ****     flagTask8      = FALSE;
 2212              		.loc 1 83 0
 2213 0060 D0319FE5 		ldr	r3, .L12+16
 2214 0064 0020A0E3 		mov	r2, #0
 2215 0068 0020C3E5 		strb	r2, [r3, #0]
  84:../lab12-foreback.c ****     flagPb         = FALSE;
 2216              		.loc 1 84 0
 2217 006c C8319FE5 		ldr	r3, .L12+20
 2218 0070 0020A0E3 		mov	r2, #0
 2219 0074 0020C3E5 		strb	r2, [r3, #0]
  85:../lab12-foreback.c ****     flagToggleLeds = FALSE;
 2220              		.loc 1 85 0
 2221 0078 C0319FE5 		ldr	r3, .L12+24
 2222 007c 0020A0E3 		mov	r2, #0
 2223 0080 0020C3E5 		strb	r2, [r3, #0]
  86:../lab12-foreback.c ****     flagReadKeypad = FALSE;
 2224              		.loc 1 86 0
 2225 0084 B8319FE5 		ldr	r3, .L12+28
 2226 0088 0020A0E3 		mov	r2, #0
 2227 008c 0020C3E5 		strb	r2, [r3, #0]
  87:../lab12-foreback.c ****     flagWriteRTC   = FALSE;
 2228              		.loc 1 87 0
 2229 0090 B0319FE5 		ldr	r3, .L12+32
 2230 0094 0020A0E3 		mov	r2, #0
 2231 0098 0020C3E5 		strb	r2, [r3, #0]
  88:../lab12-foreback.c ****     flagWriteTicks = FALSE;
 2232              		.loc 1 88 0
 2233 009c A8319FE5 		ldr	r3, .L12+36
 2234 00a0 0020A0E3 		mov	r2, #0
 2235 00a4 0020C3E5 		strb	r2, [r3, #0]
  89:../lab12-foreback.c **** 
  90:../lab12-foreback.c ****     Task1();    /* Ejecuta por primera vez a las funciones para inicializarlas */
 2236              		.loc 1 90 0
 2237 00a8 FEFFFFEB 		bl	Task1
  91:../lab12-foreback.c ****     Task2();
 2238              		.loc 1 91 0
 2239 00ac FEFFFFEB 		bl	Task2
  92:../lab12-foreback.c ****     Task3();
 2240              		.loc 1 92 0
 2241 00b0 FEFFFFEB 		bl	Task3
  93:../lab12-foreback.c ****     Task4();
 2242              		.loc 1 93 0
 2243 00b4 FEFFFFEB 		bl	Task4
  94:../lab12-foreback.c ****     Task5();
 2244              		.loc 1 94 0
 2245 00b8 FEFFFFEB 		bl	Task5
  95:../lab12-foreback.c ****     Task6();
 2246              		.loc 1 95 0
 2247 00bc FEFFFFEB 		bl	Task6
  96:../lab12-foreback.c ****     Task7();
 2248              		.loc 1 96 0
 2249 00c0 FEFFFFEB 		bl	Task7
  97:../lab12-foreback.c ****     Task8();
 2250              		.loc 1 97 0
 2251 00c4 84319FE5 		ldr	r3, .L12+40
 2252 00c8 0FE0A0E1 		mov	lr, pc
 2253 00cc 13FF2FE1 		bx	r3
  98:../lab12-foreback.c ****     Task9();
 2254              		.loc 1 98 0
 2255 00d0 7C319FE5 		ldr	r3, .L12+44
 2256 00d4 0FE0A0E1 		mov	lr, pc
 2257 00d8 13FF2FE1 		bx	r3
  99:../lab12-foreback.c ****    
 100:../lab12-foreback.c ****     pbs_open( isr_pb );                           /* Instala isr_pbs como RTI por presión de pulsad
 2258              		.loc 1 100 0
 2259 00dc 74019FE5 		ldr	r0, .L12+48
 2260 00e0 FEFFFFEB 		bl	pbs_open
 101:../lab12-foreback.c ****     timer0_open_tick( isr_tick, TICKS_PER_SEC );  /* Instala isr_tick como RTI del timer0  */
 2261              		.loc 1 101 0
 2262 00e4 70019FE5 		ldr	r0, .L12+52
 2263 00e8 6410A0E3 		mov	r1, #100
 2264 00ec FEFFFFEB 		bl	timer0_open_tick
 2265 00f0 000000EA 		b	.L10
 2266              	.L11:
 102:../lab12-foreback.c ****         
 103:../lab12-foreback.c ****     while( 1 )
 104:../lab12-foreback.c ****     {
 105:../lab12-foreback.c ****         sleep();                        /* Entra en estado IDLE, sale por interrupción */
 106:../lab12-foreback.c ****         if( flagToggleLeds )            /* Las tareas se ejecutan en esta hebra (background) en ord
 107:../lab12-foreback.c ****         {
 108:../lab12-foreback.c ****             flagToggleLeds = FALSE;
 109:../lab12-foreback.c ****             Task1();
 110:../lab12-foreback.c ****         }
 111:../lab12-foreback.c ****         if( flagReadKeypad )        
 112:../lab12-foreback.c ****         {
 113:../lab12-foreback.c ****             flagReadKeypad = FALSE;
 114:../lab12-foreback.c ****             Task2();
 115:../lab12-foreback.c ****         }
 116:../lab12-foreback.c ****         if( flagWriteRTC )
 117:../lab12-foreback.c ****         {
 118:../lab12-foreback.c ****             flagWriteRTC = FALSE;
 119:../lab12-foreback.c ****             Task3();
 120:../lab12-foreback.c ****             Task9();
 121:../lab12-foreback.c ****         }
 122:../lab12-foreback.c ****         if( flagWriteTicks )
 123:../lab12-foreback.c ****         {
 124:../lab12-foreback.c ****             flagWriteTicks = FALSE;
 125:../lab12-foreback.c ****             Task4();
 126:../lab12-foreback.c ****         }
 127:../lab12-foreback.c ****         if( flagTask5 )
 128:../lab12-foreback.c ****         {
 129:../lab12-foreback.c ****             flagTask5 = FALSE;
 130:../lab12-foreback.c ****             Task5();
 131:../lab12-foreback.c ****         }
 132:../lab12-foreback.c ****         if( flagTask6 )
 133:../lab12-foreback.c ****         {
 134:../lab12-foreback.c ****             flagTask6 = FALSE;
 135:../lab12-foreback.c ****             Task6();
 136:../lab12-foreback.c ****         }
 137:../lab12-foreback.c ****         if( flagTask8 )
 138:../lab12-foreback.c **** 		{
 139:../lab12-foreback.c **** 			flagTask8 = FALSE;
 140:../lab12-foreback.c **** 			Task8();
 141:../lab12-foreback.c **** 		}
 142:../lab12-foreback.c ****         if( flagPb )
 143:../lab12-foreback.c ****         {
 144:../lab12-foreback.c ****             flagPb = FALSE;
 145:../lab12-foreback.c ****             Task7();
 146:../lab12-foreback.c ****         }
 147:../lab12-foreback.c ****     }
 2267              		.loc 1 147 0
 2268 00f4 0000A0E1 		mov	r0, r0	@ nop
 2269              	.L10:
 105:../lab12-foreback.c ****         sleep();                        /* Entra en estado IDLE, sale por interrupción */
 2270              		.loc 1 105 0
 2271 00f8 FEFFFFEB 		bl	sleep
 106:../lab12-foreback.c ****         if( flagToggleLeds )            /* Las tareas se ejecutan en esta hebra (background) en ord
 2272              		.loc 1 106 0
 2273 00fc 3C319FE5 		ldr	r3, .L12+24
 2274 0100 0030D3E5 		ldrb	r3, [r3, #0]
 2275 0104 FF3003E2 		and	r3, r3, #255
 2276 0108 000053E3 		cmp	r3, #0
 2277 010c 0300000A 		beq	.L2
 108:../lab12-foreback.c ****             flagToggleLeds = FALSE;
 2278              		.loc 1 108 0
 2279 0110 28319FE5 		ldr	r3, .L12+24
 2280 0114 0020A0E3 		mov	r2, #0
 2281 0118 0020C3E5 		strb	r2, [r3, #0]
 109:../lab12-foreback.c ****             Task1();
 2282              		.loc 1 109 0
 2283 011c FEFFFFEB 		bl	Task1
 2284              	.L2:
 111:../lab12-foreback.c ****         if( flagReadKeypad )        
 2285              		.loc 1 111 0
 2286 0120 1C319FE5 		ldr	r3, .L12+28
 2287 0124 0030D3E5 		ldrb	r3, [r3, #0]
 2288 0128 FF3003E2 		and	r3, r3, #255
 2289 012c 000053E3 		cmp	r3, #0
 2290 0130 0300000A 		beq	.L3
 113:../lab12-foreback.c ****             flagReadKeypad = FALSE;
 2291              		.loc 1 113 0
 2292 0134 08319FE5 		ldr	r3, .L12+28
 2293 0138 0020A0E3 		mov	r2, #0
 2294 013c 0020C3E5 		strb	r2, [r3, #0]
 114:../lab12-foreback.c ****             Task2();
 2295              		.loc 1 114 0
 2296 0140 FEFFFFEB 		bl	Task2
 2297              	.L3:
 116:../lab12-foreback.c ****         if( flagWriteRTC )
 2298              		.loc 1 116 0
 2299 0144 FC309FE5 		ldr	r3, .L12+32
 2300 0148 0030D3E5 		ldrb	r3, [r3, #0]
 2301 014c FF3003E2 		and	r3, r3, #255
 2302 0150 000053E3 		cmp	r3, #0
 2303 0154 0600000A 		beq	.L4
 118:../lab12-foreback.c ****             flagWriteRTC = FALSE;
 2304              		.loc 1 118 0
 2305 0158 E8309FE5 		ldr	r3, .L12+32
 2306 015c 0020A0E3 		mov	r2, #0
 2307 0160 0020C3E5 		strb	r2, [r3, #0]
 119:../lab12-foreback.c ****             Task3();
 2308              		.loc 1 119 0
 2309 0164 FEFFFFEB 		bl	Task3
 120:../lab12-foreback.c ****             Task9();
 2310              		.loc 1 120 0
 2311 0168 E4309FE5 		ldr	r3, .L12+44
 2312 016c 0FE0A0E1 		mov	lr, pc
 2313 0170 13FF2FE1 		bx	r3
 2314              	.L4:
 122:../lab12-foreback.c ****         if( flagWriteTicks )
 2315              		.loc 1 122 0
 2316 0174 D0309FE5 		ldr	r3, .L12+36
 2317 0178 0030D3E5 		ldrb	r3, [r3, #0]
 2318 017c FF3003E2 		and	r3, r3, #255
 2319 0180 000053E3 		cmp	r3, #0
 2320 0184 0300000A 		beq	.L5
 124:../lab12-foreback.c ****             flagWriteTicks = FALSE;
 2321              		.loc 1 124 0
 2322 0188 BC309FE5 		ldr	r3, .L12+36
 2323 018c 0020A0E3 		mov	r2, #0
 2324 0190 0020C3E5 		strb	r2, [r3, #0]
 125:../lab12-foreback.c ****             Task4();
 2325              		.loc 1 125 0
 2326 0194 FEFFFFEB 		bl	Task4
 2327              	.L5:
 127:../lab12-foreback.c ****         if( flagTask5 )
 2328              		.loc 1 127 0
 2329 0198 90309FE5 		ldr	r3, .L12+8
 2330 019c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2331 01a0 000053E3 		cmp	r3, #0
 2332 01a4 0300000A 		beq	.L6
 129:../lab12-foreback.c ****             flagTask5 = FALSE;
 2333              		.loc 1 129 0
 2334 01a8 80309FE5 		ldr	r3, .L12+8
 2335 01ac 0020A0E3 		mov	r2, #0
 2336 01b0 0020C3E5 		strb	r2, [r3, #0]
 130:../lab12-foreback.c ****             Task5();
 2337              		.loc 1 130 0
 2338 01b4 FEFFFFEB 		bl	Task5
 2339              	.L6:
 132:../lab12-foreback.c ****         if( flagTask6 )
 2340              		.loc 1 132 0
 2341 01b8 74309FE5 		ldr	r3, .L12+12
 2342 01bc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2343 01c0 000053E3 		cmp	r3, #0
 2344 01c4 0300000A 		beq	.L7
 134:../lab12-foreback.c ****             flagTask6 = FALSE;
 2345              		.loc 1 134 0
 2346 01c8 64309FE5 		ldr	r3, .L12+12
 2347 01cc 0020A0E3 		mov	r2, #0
 2348 01d0 0020C3E5 		strb	r2, [r3, #0]
 135:../lab12-foreback.c ****             Task6();
 2349              		.loc 1 135 0
 2350 01d4 FEFFFFEB 		bl	Task6
 2351              	.L7:
 137:../lab12-foreback.c ****         if( flagTask8 )
 2352              		.loc 1 137 0
 2353 01d8 58309FE5 		ldr	r3, .L12+16
 2354 01dc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2355 01e0 000053E3 		cmp	r3, #0
 2356 01e4 0500000A 		beq	.L8
 139:../lab12-foreback.c **** 			flagTask8 = FALSE;
 2357              		.loc 1 139 0
 2358 01e8 48309FE5 		ldr	r3, .L12+16
 2359 01ec 0020A0E3 		mov	r2, #0
 2360 01f0 0020C3E5 		strb	r2, [r3, #0]
 140:../lab12-foreback.c **** 			Task8();
 2361              		.loc 1 140 0
 2362 01f4 54309FE5 		ldr	r3, .L12+40
 2363 01f8 0FE0A0E1 		mov	lr, pc
 2364 01fc 13FF2FE1 		bx	r3
 2365              	.L8:
 142:../lab12-foreback.c ****         if( flagPb )
 2366              		.loc 1 142 0
 2367 0200 34309FE5 		ldr	r3, .L12+20
 2368 0204 0030D3E5 		ldrb	r3, [r3, #0]
 2369 0208 FF3003E2 		and	r3, r3, #255
 2370 020c 000053E3 		cmp	r3, #0
 2371 0210 B7FFFF0A 		beq	.L11
 144:../lab12-foreback.c ****             flagPb = FALSE;
 2372              		.loc 1 144 0
 2373 0214 20309FE5 		ldr	r3, .L12+20
 2374 0218 0020A0E3 		mov	r2, #0
 2375 021c 0020C3E5 		strb	r2, [r3, #0]
 145:../lab12-foreback.c ****             Task7();
 2376              		.loc 1 145 0
 2377 0220 FEFFFFEB 		bl	Task7
 2378              		.loc 1 147 0
 2379 0224 B3FFFFEA 		b	.L10
 2380              	.L13:
 2381              		.align	2
 2382              	.L12:
 2383 0228 00000000 		.word	.LC0
 2384 022c 34000000 		.word	.LC1
 2385 0230 00000000 		.word	flagTask5
 2386 0234 00000000 		.word	flagTask6
 2387 0238 00000000 		.word	flagTask8
 2388 023c 00000000 		.word	flagPb
 2389 0240 00000000 		.word	flagToggleLeds
 2390 0244 00000000 		.word	flagReadKeypad
 2391 0248 00000000 		.word	flagWriteRTC
 2392 024c 00000000 		.word	flagWriteTicks
 2393 0250 00000000 		.word	Task8
 2394 0254 00000000 		.word	Task9
 2395 0258 00000000 		.word	isr_pb
 2396 025c 00000000 		.word	isr_tick
 2397              		.cfi_endproc
 2398              	.LFE0:
 2400              		.section	.rodata
 2401 0067 00       		.align	2
 2402              	.LC2:
 2403 0068 20546173 		.ascii	" Task 1: iniciada.\012\000"
 2403      6B20313A 
 2403      20696E69 
 2403      63696164 
 2403      612E0A00 
 2404              		.text
 2405              		.align	2
 2406              		.global	Task1
 2408              	Task1:
 2409              	.LFB1:
 148:../lab12-foreback.c **** }
 149:../lab12-foreback.c **** 
 150:../lab12-foreback.c **** /*******************************************************************/
 151:../lab12-foreback.c **** 
 152:../lab12-foreback.c **** void Task1( void )  /* Cada 0,5 segundos (50 ticks) alterna el led que se enciende */
 153:../lab12-foreback.c **** {
 2410              		.loc 1 153 0
 2411              		.cfi_startproc
 2412              		@ Function supports interworking.
 2413              		@ args = 0, pretend = 0, frame = 0
 2414              		@ frame_needed = 1, uses_anonymous_args = 0
 2415 0260 0DC0A0E1 		mov	ip, sp
 2416              	.LCFI2:
 2417              		.cfi_def_cfa_register 12
 2418 0264 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2419 0268 04B04CE2 		sub	fp, ip, #4
 2420              		.cfi_offset 14, -8
 2421              		.cfi_offset 13, -12
 2422              		.cfi_offset 11, -16
 2423              	.LCFI3:
 2424              		.cfi_def_cfa 11, 4
 154:../lab12-foreback.c ****     static boolean init = TRUE;
 155:../lab12-foreback.c ****   
 156:../lab12-foreback.c ****     if( init )
 2425              		.loc 1 156 0
 2426 026c 4C309FE5 		ldr	r3, .L17
 2427 0270 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2428 0274 000053E3 		cmp	r3, #0
 2429 0278 0900000A 		beq	.L15
 157:../lab12-foreback.c ****     {
 158:../lab12-foreback.c ****         init = FALSE;
 2430              		.loc 1 158 0
 2431 027c 3C309FE5 		ldr	r3, .L17
 2432 0280 0020A0E3 		mov	r2, #0
 2433 0284 0020C3E5 		strb	r2, [r3, #0]
 159:../lab12-foreback.c ****         uart0_puts( " Task 1: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2434              		.loc 1 159 0
 2435 0288 34009FE5 		ldr	r0, .L17+4
 2436 028c FEFFFFEB 		bl	uart0_puts
 160:../lab12-foreback.c ****         led_on( LEFT_LED );
 2437              		.loc 1 160 0
 2438 0290 0100A0E3 		mov	r0, #1
 2439 0294 FEFFFFEB 		bl	led_on
 161:../lab12-foreback.c ****         led_off( RIGHT_LED );
 2440              		.loc 1 161 0
 2441 0298 0200A0E3 		mov	r0, #2
 2442 029c FEFFFFEB 		bl	led_off
 2443 02a0 030000EA 		b	.L14
 2444              	.L15:
 162:../lab12-foreback.c ****     }
 163:../lab12-foreback.c ****     else
 164:../lab12-foreback.c ****     {
 165:../lab12-foreback.c ****         led_toggle( LEFT_LED );
 2445              		.loc 1 165 0
 2446 02a4 0100A0E3 		mov	r0, #1
 2447 02a8 FEFFFFEB 		bl	led_toggle
 166:../lab12-foreback.c ****         led_toggle( RIGHT_LED );
 2448              		.loc 1 166 0
 2449 02ac 0200A0E3 		mov	r0, #2
 2450 02b0 FEFFFFEB 		bl	led_toggle
 2451              	.L14:
 167:../lab12-foreback.c ****     }
 168:../lab12-foreback.c **** }
 2452              		.loc 1 168 0
 2453 02b4 0CD04BE2 		sub	sp, fp, #12
 2454 02b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2455 02bc 1EFF2FE1 		bx	lr
 2456              	.L18:
 2457              		.align	2
 2458              	.L17:
 2459 02c0 10000000 		.word	init.4172
 2460 02c4 68000000 		.word	.LC2
 2461              		.cfi_endproc
 2462              	.LFE1:
 2464              		.section	.rodata
 2465              		.align	2
 2466              	.LC3:
 2467 007c 20546173 		.ascii	" Task 2: iniciada.\012\000"
 2467      6B20323A 
 2467      20696E69 
 2467      63696164 
 2467      612E0A00 
 2468              		.text
 2469              		.align	2
 2470              		.global	Task2
 2472              	Task2:
 2473              	.LFB2:
 169:../lab12-foreback.c **** 
 170:../lab12-foreback.c **** void Task2( void )  /* Cada 50 ms (5 ticks) muestrea el keypad y envía el scancode a otras tareas *
 171:../lab12-foreback.c **** {
 2474              		.loc 1 171 0
 2475              		.cfi_startproc
 2476              		@ Function supports interworking.
 2477              		@ args = 0, pretend = 0, frame = 0
 2478              		@ frame_needed = 1, uses_anonymous_args = 0
 2479 02c8 0DC0A0E1 		mov	ip, sp
 2480              	.LCFI4:
 2481              		.cfi_def_cfa_register 12
 2482 02cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2483 02d0 04B04CE2 		sub	fp, ip, #4
 2484              		.cfi_offset 14, -8
 2485              		.cfi_offset 13, -12
 2486              		.cfi_offset 11, -16
 2487              	.LCFI5:
 2488              		.cfi_def_cfa 11, 4
 172:../lab12-foreback.c ****     static boolean init = TRUE;
 173:../lab12-foreback.c ****     static enum { wait_keydown, scan, wait_keyup } state;
 174:../lab12-foreback.c **** 
 175:../lab12-foreback.c ****     if( init )
 2489              		.loc 1 175 0
 2490 02d4 FC309FE5 		ldr	r3, .L30
 2491 02d8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2492 02dc 000053E3 		cmp	r3, #0
 2493 02e0 0800000A 		beq	.L20
 176:../lab12-foreback.c ****     {
 177:../lab12-foreback.c ****         init  = FALSE;
 2494              		.loc 1 177 0
 2495 02e4 EC309FE5 		ldr	r3, .L30
 2496 02e8 0020A0E3 		mov	r2, #0
 2497 02ec 0020C3E5 		strb	r2, [r3, #0]
 178:../lab12-foreback.c ****         uart0_puts( " Task 2: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2498              		.loc 1 178 0
 2499 02f0 E4009FE5 		ldr	r0, .L30+4
 2500 02f4 FEFFFFEB 		bl	uart0_puts
 179:../lab12-foreback.c ****         state = wait_keydown;
 2501              		.loc 1 179 0
 2502 02f8 E0309FE5 		ldr	r3, .L30+8
 2503 02fc 0020A0E3 		mov	r2, #0
 2504 0300 0020C3E5 		strb	r2, [r3, #0]
 2505 0304 300000EA 		b	.L19
 2506              	.L20:
 180:../lab12-foreback.c ****     }
 181:../lab12-foreback.c ****     else switch( state )
 2507              		.loc 1 181 0
 2508 0308 D0309FE5 		ldr	r3, .L30+8
 2509 030c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2510 0310 010053E3 		cmp	r3, #1
 2511 0314 0B00000A 		beq	.L23
 2512 0318 020053E3 		cmp	r3, #2
 2513 031c 1F00000A 		beq	.L24
 2514 0320 000053E3 		cmp	r3, #0
 2515 0324 2800001A 		bne	.L19
 2516              	.L22:
 182:../lab12-foreback.c ****     {
 183:../lab12-foreback.c ****         case wait_keydown:
 184:../lab12-foreback.c ****             if( keypad_pressed() )
 2517              		.loc 1 184 0
 2518 0328 FEFFFFEB 		bl	keypad_pressed
 2519 032c 0030A0E1 		mov	r3, r0
 2520 0330 000053E3 		cmp	r3, #0
 2521 0334 2100000A 		beq	.L28
 185:../lab12-foreback.c ****                 state = scan;
 2522              		.loc 1 185 0
 2523 0338 A0309FE5 		ldr	r3, .L30+8
 2524 033c 0120A0E3 		mov	r2, #1
 2525 0340 0020C3E5 		strb	r2, [r3, #0]
 186:../lab12-foreback.c ****             break;
 2526              		.loc 1 186 0
 2527 0344 200000EA 		b	.L19
 2528              	.L23:
 187:../lab12-foreback.c ****         case scan:
 188:../lab12-foreback.c ****             scancode = keypad_scan();
 2529              		.loc 1 188 0
 2530 0348 FEFFFFEB 		bl	keypad_scan
 2531 034c 0030A0E1 		mov	r3, r0
 2532 0350 0320A0E1 		mov	r2, r3
 2533 0354 88309FE5 		ldr	r3, .L30+12
 2534 0358 0020C3E5 		strb	r2, [r3, #0]
 189:../lab12-foreback.c ****             if( scancode != KEYPAD_FAILURE )
 2535              		.loc 1 189 0
 2536 035c 80309FE5 		ldr	r3, .L30+12
 2537 0360 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2538 0364 FF0053E3 		cmp	r3, #255
 2539 0368 0800000A 		beq	.L26
 190:../lab12-foreback.c ****             {
 191:../lab12-foreback.c ****                 flagTask5 = TRUE;
 2540              		.loc 1 191 0
 2541 036c 74309FE5 		ldr	r3, .L30+16
 2542 0370 0120A0E3 		mov	r2, #1
 2543 0374 0020C3E5 		strb	r2, [r3, #0]
 192:../lab12-foreback.c ****                 flagTask6 = TRUE;
 2544              		.loc 1 192 0
 2545 0378 6C309FE5 		ldr	r3, .L30+20
 2546 037c 0120A0E3 		mov	r2, #1
 2547 0380 0020C3E5 		strb	r2, [r3, #0]
 193:../lab12-foreback.c ****                 flagTask8 = TRUE;
 2548              		.loc 1 193 0
 2549 0384 64309FE5 		ldr	r3, .L30+24
 2550 0388 0120A0E3 		mov	r2, #1
 2551 038c 0020C3E5 		strb	r2, [r3, #0]
 2552              	.L26:
 194:../lab12-foreback.c ****             }
 195:../lab12-foreback.c ****             state = wait_keyup;
 2553              		.loc 1 195 0
 2554 0390 48309FE5 		ldr	r3, .L30+8
 2555 0394 0220A0E3 		mov	r2, #2
 2556 0398 0020C3E5 		strb	r2, [r3, #0]
 196:../lab12-foreback.c ****             break;
 2557              		.loc 1 196 0
 2558 039c 0A0000EA 		b	.L19
 2559              	.L24:
 197:../lab12-foreback.c ****         case wait_keyup:
 198:../lab12-foreback.c ****             if( !keypad_pressed() )
 2560              		.loc 1 198 0
 2561 03a0 FEFFFFEB 		bl	keypad_pressed
 2562 03a4 0030A0E1 		mov	r3, r0
 2563 03a8 000053E3 		cmp	r3, #0
 2564 03ac 0500001A 		bne	.L29
 199:../lab12-foreback.c ****                 state = wait_keydown;
 2565              		.loc 1 199 0
 2566 03b0 28309FE5 		ldr	r3, .L30+8
 2567 03b4 0020A0E3 		mov	r2, #0
 2568 03b8 0020C3E5 		strb	r2, [r3, #0]
 200:../lab12-foreback.c ****             break;
 2569              		.loc 1 200 0
 2570 03bc 020000EA 		b	.L19
 2571              	.L28:
 186:../lab12-foreback.c ****             break;
 2572              		.loc 1 186 0
 2573 03c0 0000A0E1 		mov	r0, r0	@ nop
 2574 03c4 000000EA 		b	.L19
 2575              	.L29:
 2576              		.loc 1 200 0
 2577 03c8 0000A0E1 		mov	r0, r0	@ nop
 2578              	.L19:
 201:../lab12-foreback.c ****     }
 202:../lab12-foreback.c **** }
 2579              		.loc 1 202 0
 2580 03cc 0CD04BE2 		sub	sp, fp, #12
 2581 03d0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2582 03d4 1EFF2FE1 		bx	lr
 2583              	.L31:
 2584              		.align	2
 2585              	.L30:
 2586 03d8 0F000000 		.word	init.4176
 2587 03dc 7C000000 		.word	.LC3
 2588 03e0 08000000 		.word	state.4181
 2589 03e4 00000000 		.word	scancode
 2590 03e8 00000000 		.word	flagTask5
 2591 03ec 00000000 		.word	flagTask6
 2592 03f0 00000000 		.word	flagTask8
 2593              		.cfi_endproc
 2594              	.LFE2:
 2596              		.section	.rodata
 2597              		.align	2
 2598              	.LC4:
 2599 0090 20546173 		.ascii	" Task 3: iniciada.\012\000"
 2599      6B20333A 
 2599      20696E69 
 2599      63696164 
 2599      612E0A00 
 2600              		.align	2
 2601              	.LC5:
 2602 00a4 20202854 		.ascii	"  (Task 3) Hora: \000"
 2602      61736B20 
 2602      33292048 
 2602      6F72613A 
 2602      2000
 2603 00b6 0000     		.align	2
 2604              	.LC6:
 2605 00b8 0A00     		.ascii	"\012\000"
 2606              		.text
 2607              		.align	2
 2608              		.global	Task3
 2610              	Task3:
 2611              	.LFB3:
 203:../lab12-foreback.c **** 
 204:../lab12-foreback.c **** void Task3( void  )  /* Cada segundo (100 ticks) muestra por la UART0 la hora del RTC */
 205:../lab12-foreback.c **** {
 2612              		.loc 1 205 0
 2613              		.cfi_startproc
 2614              		@ Function supports interworking.
 2615              		@ args = 0, pretend = 0, frame = 8
 2616              		@ frame_needed = 1, uses_anonymous_args = 0
 2617 03f4 0DC0A0E1 		mov	ip, sp
 2618              	.LCFI6:
 2619              		.cfi_def_cfa_register 12
 2620 03f8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2621 03fc 04B04CE2 		sub	fp, ip, #4
 2622              		.cfi_offset 14, -8
 2623              		.cfi_offset 13, -12
 2624              		.cfi_offset 11, -16
 2625              	.LCFI7:
 2626              		.cfi_def_cfa 11, 4
 2627 0400 08D04DE2 		sub	sp, sp, #8
 206:../lab12-foreback.c ****     static boolean init = TRUE;
 207:../lab12-foreback.c ****     rtc_time_t rtc_time;
 208:../lab12-foreback.c ****     
 209:../lab12-foreback.c ****     if( init )
 2628              		.loc 1 209 0
 2629 0404 7C309FE5 		ldr	r3, .L35
 2630 0408 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2631 040c 000053E3 		cmp	r3, #0
 2632 0410 0500000A 		beq	.L33
 210:../lab12-foreback.c ****     {
 211:../lab12-foreback.c ****         init = FALSE;
 2633              		.loc 1 211 0
 2634 0414 6C309FE5 		ldr	r3, .L35
 2635 0418 0020A0E3 		mov	r2, #0
 2636 041c 0020C3E5 		strb	r2, [r3, #0]
 212:../lab12-foreback.c ****         uart0_puts( " Task 3: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2637              		.loc 1 212 0
 2638 0420 64009FE5 		ldr	r0, .L35+4
 2639 0424 FEFFFFEB 		bl	uart0_puts
 2640 0428 130000EA 		b	.L32
 2641              	.L33:
 213:../lab12-foreback.c ****     }
 214:../lab12-foreback.c ****     else
 215:../lab12-foreback.c ****     {
 216:../lab12-foreback.c ****         rtc_gettime( &rtc_time );
 2642              		.loc 1 216 0
 2643 042c 14304BE2 		sub	r3, fp, #20
 2644 0430 0300A0E1 		mov	r0, r3
 2645 0434 FEFFFFEB 		bl	rtc_gettime
 217:../lab12-foreback.c ****         uart0_puts( "  (Task 3) Hora: " );
 2646              		.loc 1 217 0
 2647 0438 50009FE5 		ldr	r0, .L35+8
 2648 043c FEFFFFEB 		bl	uart0_puts
 218:../lab12-foreback.c ****         uart0_putint( rtc_time.hour );
 2649              		.loc 1 218 0
 2650 0440 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2651 0444 0300A0E1 		mov	r0, r3
 2652 0448 FEFFFFEB 		bl	uart0_putint
 219:../lab12-foreback.c ****         uart0_putchar( ':' );
 2653              		.loc 1 219 0
 2654 044c 3A00A0E3 		mov	r0, #58
 2655 0450 FEFFFFEB 		bl	uart0_putchar
 220:../lab12-foreback.c ****         uart0_putint( rtc_time.min );
 2656              		.loc 1 220 0
 2657 0454 13305BE5 		ldrb	r3, [fp, #-19]	@ zero_extendqisi2
 2658 0458 0300A0E1 		mov	r0, r3
 2659 045c FEFFFFEB 		bl	uart0_putint
 221:../lab12-foreback.c ****         uart0_putchar( ':' );
 2660              		.loc 1 221 0
 2661 0460 3A00A0E3 		mov	r0, #58
 2662 0464 FEFFFFEB 		bl	uart0_putchar
 222:../lab12-foreback.c ****         uart0_putint( rtc_time.sec );
 2663              		.loc 1 222 0
 2664 0468 14305BE5 		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 2665 046c 0300A0E1 		mov	r0, r3
 2666 0470 FEFFFFEB 		bl	uart0_putint
 223:../lab12-foreback.c ****         uart0_puts( "\n" );
 2667              		.loc 1 223 0
 2668 0474 18009FE5 		ldr	r0, .L35+12
 2669 0478 FEFFFFEB 		bl	uart0_puts
 2670              	.L32:
 224:../lab12-foreback.c ****     }
 225:../lab12-foreback.c **** }
 2671              		.loc 1 225 0
 2672 047c 0CD04BE2 		sub	sp, fp, #12
 2673 0480 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2674 0484 1EFF2FE1 		bx	lr
 2675              	.L36:
 2676              		.align	2
 2677              	.L35:
 2678 0488 0E000000 		.word	init.4189
 2679 048c 90000000 		.word	.LC4
 2680 0490 A4000000 		.word	.LC5
 2681 0494 B8000000 		.word	.LC6
 2682              		.cfi_endproc
 2683              	.LFE3:
 2685              		.section	.rodata
 2686 00ba 0000     		.align	2
 2687              	.LC7:
 2688 00bc 20546173 		.ascii	" Task 4: iniciada.\012\000"
 2688      6B20343A 
 2688      20696E69 
 2688      63696164 
 2688      612E0A00 
 2689              		.align	2
 2690              	.LC8:
 2691 00d0 20202854 		.ascii	"  (Task 4) Ticks: \000"
 2691      61736B20 
 2691      34292054 
 2691      69636B73 
 2691      3A2000
 2692              		.text
 2693              		.align	2
 2694              		.global	Task4
 2696              	Task4:
 2697              	.LFB4:
 226:../lab12-foreback.c **** 
 227:../lab12-foreback.c **** void Task4( void )  /* Cada 10 segundos (1000 ticks) muestra por la UART0 los ticks transcurridos *
 228:../lab12-foreback.c **** {
 2698              		.loc 1 228 0
 2699              		.cfi_startproc
 2700              		@ Function supports interworking.
 2701              		@ args = 0, pretend = 0, frame = 0
 2702              		@ frame_needed = 1, uses_anonymous_args = 0
 2703 0498 0DC0A0E1 		mov	ip, sp
 2704              	.LCFI8:
 2705              		.cfi_def_cfa_register 12
 2706 049c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2707 04a0 04B04CE2 		sub	fp, ip, #4
 2708              		.cfi_offset 14, -8
 2709              		.cfi_offset 13, -12
 2710              		.cfi_offset 11, -16
 2711              	.LCFI9:
 2712              		.cfi_def_cfa 11, 4
 229:../lab12-foreback.c ****     static boolean init = TRUE;
 230:../lab12-foreback.c ****     static uint32 ticks;
 231:../lab12-foreback.c ****     
 232:../lab12-foreback.c ****     if( init )
 2713              		.loc 1 232 0
 2714 04a4 6C309FE5 		ldr	r3, .L40
 2715 04a8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2716 04ac 000053E3 		cmp	r3, #0
 2717 04b0 0800000A 		beq	.L38
 233:../lab12-foreback.c ****     {
 234:../lab12-foreback.c ****         init = FALSE;
 2718              		.loc 1 234 0
 2719 04b4 5C309FE5 		ldr	r3, .L40
 2720 04b8 0020A0E3 		mov	r2, #0
 2721 04bc 0020C3E5 		strb	r2, [r3, #0]
 235:../lab12-foreback.c ****         uart0_puts( " Task 4: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2722              		.loc 1 235 0
 2723 04c0 54009FE5 		ldr	r0, .L40+4
 2724 04c4 FEFFFFEB 		bl	uart0_puts
 236:../lab12-foreback.c ****         ticks = 0;
 2725              		.loc 1 236 0
 2726 04c8 50309FE5 		ldr	r3, .L40+8
 2727 04cc 0020A0E3 		mov	r2, #0
 2728 04d0 002083E5 		str	r2, [r3, #0]
 2729 04d4 0C0000EA 		b	.L37
 2730              	.L38:
 237:../lab12-foreback.c ****     }
 238:../lab12-foreback.c ****     else
 239:../lab12-foreback.c ****     {
 240:../lab12-foreback.c ****         ticks += TICKS_PER_SEC * 10;
 2731              		.loc 1 240 0
 2732 04d8 40309FE5 		ldr	r3, .L40+8
 2733 04dc 003093E5 		ldr	r3, [r3, #0]
 2734 04e0 FA2F83E2 		add	r2, r3, #1000
 2735 04e4 34309FE5 		ldr	r3, .L40+8
 2736 04e8 002083E5 		str	r2, [r3, #0]
 241:../lab12-foreback.c ****         uart0_puts( "  (Task 4) Ticks: " );
 2737              		.loc 1 241 0
 2738 04ec 30009FE5 		ldr	r0, .L40+12
 2739 04f0 FEFFFFEB 		bl	uart0_puts
 242:../lab12-foreback.c ****         uart0_putint( ticks );
 2740              		.loc 1 242 0
 2741 04f4 24309FE5 		ldr	r3, .L40+8
 2742 04f8 003093E5 		ldr	r3, [r3, #0]
 2743 04fc 0300A0E1 		mov	r0, r3
 2744 0500 FEFFFFEB 		bl	uart0_putint
 243:../lab12-foreback.c ****         uart0_puts( "\n" );
 2745              		.loc 1 243 0
 2746 0504 1C009FE5 		ldr	r0, .L40+16
 2747 0508 FEFFFFEB 		bl	uart0_puts
 2748              	.L37:
 244:../lab12-foreback.c ****     }
 245:../lab12-foreback.c **** }
 2749              		.loc 1 245 0
 2750 050c 0CD04BE2 		sub	sp, fp, #12
 2751 0510 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2752 0514 1EFF2FE1 		bx	lr
 2753              	.L41:
 2754              		.align	2
 2755              	.L40:
 2756 0518 0D000000 		.word	init.4194
 2757 051c BC000000 		.word	.LC7
 2758 0520 04000000 		.word	ticks.4195
 2759 0524 D0000000 		.word	.LC8
 2760 0528 B8000000 		.word	.LC6
 2761              		.cfi_endproc
 2762              	.LFE4:
 2764              		.section	.rodata
 2765 00e3 00       		.align	2
 2766              	.LC9:
 2767 00e4 20546173 		.ascii	" Task 5: iniciada.\012\000"
 2767      6B20353A 
 2767      20696E69 
 2767      63696164 
 2767      612E0A00 
 2768              		.align	2
 2769              	.LC10:
 2770 00f8 20202854 		.ascii	"  (Task 5) Tecla pulsada: \000"
 2770      61736B20 
 2770      35292054 
 2770      65636C61 
 2770      2070756C 
 2771              		.text
 2772              		.align	2
 2773              		.global	Task5
 2775              	Task5:
 2776              	.LFB5:
 246:../lab12-foreback.c **** 
 247:../lab12-foreback.c **** void Task5( void )  /* Cada vez que reciba un scancode lo muestra por la UART0 */
 248:../lab12-foreback.c **** {
 2777              		.loc 1 248 0
 2778              		.cfi_startproc
 2779              		@ Function supports interworking.
 2780              		@ args = 0, pretend = 0, frame = 0
 2781              		@ frame_needed = 1, uses_anonymous_args = 0
 2782 052c 0DC0A0E1 		mov	ip, sp
 2783              	.LCFI10:
 2784              		.cfi_def_cfa_register 12
 2785 0530 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2786 0534 04B04CE2 		sub	fp, ip, #4
 2787              		.cfi_offset 14, -8
 2788              		.cfi_offset 13, -12
 2789              		.cfi_offset 11, -16
 2790              	.LCFI11:
 2791              		.cfi_def_cfa 11, 4
 249:../lab12-foreback.c ****     static boolean init = TRUE;
 250:../lab12-foreback.c **** 
 251:../lab12-foreback.c ****     if( init )
 2792              		.loc 1 251 0
 2793 0538 4C309FE5 		ldr	r3, .L45
 2794 053c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2795 0540 000053E3 		cmp	r3, #0
 2796 0544 0500000A 		beq	.L43
 252:../lab12-foreback.c ****     {
 253:../lab12-foreback.c ****         init = FALSE;
 2797              		.loc 1 253 0
 2798 0548 3C309FE5 		ldr	r3, .L45
 2799 054c 0020A0E3 		mov	r2, #0
 2800 0550 0020C3E5 		strb	r2, [r3, #0]
 254:../lab12-foreback.c ****         uart0_puts( " Task 5: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2801              		.loc 1 254 0
 2802 0554 34009FE5 		ldr	r0, .L45+4
 2803 0558 FEFFFFEB 		bl	uart0_puts
 2804 055c 070000EA 		b	.L42
 2805              	.L43:
 255:../lab12-foreback.c ****     }
 256:../lab12-foreback.c ****     else
 257:../lab12-foreback.c ****     {
 258:../lab12-foreback.c ****         uart0_puts( "  (Task 5) Tecla pulsada: " );
 2806              		.loc 1 258 0
 2807 0560 2C009FE5 		ldr	r0, .L45+8
 2808 0564 FEFFFFEB 		bl	uart0_puts
 259:../lab12-foreback.c ****         uart0_puthex( scancode );
 2809              		.loc 1 259 0
 2810 0568 28309FE5 		ldr	r3, .L45+12
 2811 056c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2812 0570 0300A0E1 		mov	r0, r3
 2813 0574 FEFFFFEB 		bl	uart0_puthex
 260:../lab12-foreback.c ****         uart0_puts( "\n" );
 2814              		.loc 1 260 0
 2815 0578 1C009FE5 		ldr	r0, .L45+16
 2816 057c FEFFFFEB 		bl	uart0_puts
 2817              	.L42:
 261:../lab12-foreback.c ****     }
 262:../lab12-foreback.c **** }
 2818              		.loc 1 262 0
 2819 0580 0CD04BE2 		sub	sp, fp, #12
 2820 0584 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2821 0588 1EFF2FE1 		bx	lr
 2822              	.L46:
 2823              		.align	2
 2824              	.L45:
 2825 058c 0C000000 		.word	init.4199
 2826 0590 E4000000 		.word	.LC9
 2827 0594 F8000000 		.word	.LC10
 2828 0598 00000000 		.word	scancode
 2829 059c B8000000 		.word	.LC6
 2830              		.cfi_endproc
 2831              	.LFE5:
 2833              		.section	.rodata
 2834 0113 00       		.align	2
 2835              	.LC11:
 2836 0114 20546173 		.ascii	" Task 6: iniciada.\012\000"
 2836      6B20363A 
 2836      20696E69 
 2836      63696164 
 2836      612E0A00 
 2837              		.text
 2838              		.align	2
 2839              		.global	Task6
 2841              	Task6:
 2842              	.LFB6:
 263:../lab12-foreback.c **** 
 264:../lab12-foreback.c **** void Task6( void )  /* Cada vez que reciba un scancode lo muestra por los 7 segmentos */
 265:../lab12-foreback.c **** {
 2843              		.loc 1 265 0
 2844              		.cfi_startproc
 2845              		@ Function supports interworking.
 2846              		@ args = 0, pretend = 0, frame = 0
 2847              		@ frame_needed = 1, uses_anonymous_args = 0
 2848 05a0 0DC0A0E1 		mov	ip, sp
 2849              	.LCFI12:
 2850              		.cfi_def_cfa_register 12
 2851 05a4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2852 05a8 04B04CE2 		sub	fp, ip, #4
 2853              		.cfi_offset 14, -8
 2854              		.cfi_offset 13, -12
 2855              		.cfi_offset 11, -16
 2856              	.LCFI13:
 2857              		.cfi_def_cfa 11, 4
 266:../lab12-foreback.c ****     static boolean init = TRUE;
 267:../lab12-foreback.c **** 
 268:../lab12-foreback.c ****     if( init )
 2858              		.loc 1 268 0
 2859 05ac 3C309FE5 		ldr	r3, .L50
 2860 05b0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2861 05b4 000053E3 		cmp	r3, #0
 2862 05b8 0500000A 		beq	.L48
 269:../lab12-foreback.c ****     {
 270:../lab12-foreback.c ****         init = FALSE;
 2863              		.loc 1 270 0
 2864 05bc 2C309FE5 		ldr	r3, .L50
 2865 05c0 0020A0E3 		mov	r2, #0
 2866 05c4 0020C3E5 		strb	r2, [r3, #0]
 271:../lab12-foreback.c ****         uart0_puts( " Task 6: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2867              		.loc 1 271 0
 2868 05c8 24009FE5 		ldr	r0, .L50+4
 2869 05cc FEFFFFEB 		bl	uart0_puts
 2870 05d0 030000EA 		b	.L47
 2871              	.L48:
 272:../lab12-foreback.c ****     }
 273:../lab12-foreback.c ****     else
 274:../lab12-foreback.c ****     {
 275:../lab12-foreback.c ****         segs_putchar( scancode );
 2872              		.loc 1 275 0
 2873 05d4 1C309FE5 		ldr	r3, .L50+8
 2874 05d8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2875 05dc 0300A0E1 		mov	r0, r3
 2876 05e0 FEFFFFEB 		bl	segs_putchar
 2877              	.L47:
 276:../lab12-foreback.c ****     }
 277:../lab12-foreback.c **** }
 2878              		.loc 1 277 0
 2879 05e4 0CD04BE2 		sub	sp, fp, #12
 2880 05e8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2881 05ec 1EFF2FE1 		bx	lr
 2882              	.L51:
 2883              		.align	2
 2884              	.L50:
 2885 05f0 0B000000 		.word	init.4203
 2886 05f4 14010000 		.word	.LC11
 2887 05f8 00000000 		.word	scancode
 2888              		.cfi_endproc
 2889              	.LFE6:
 2891              		.section	.rodata
 2892              		.align	2
 2893              	.LC12:
 2894 0128 20546173 		.ascii	" Task 7: iniciada.\012\000"
 2894      6B20373A 
 2894      20696E69 
 2894      63696164 
 2894      612E0A00 
 2895              		.align	2
 2896              	.LC13:
 2897 013c 20202854 		.ascii	"  (Task 7) Se ha pulsado alg\372n pushbutton...\012"
 2897      61736B20 
 2897      37292053 
 2897      65206861 
 2897      2070756C 
 2898 0169 00       		.ascii	"\000"
 2899              		.text
 2900              		.align	2
 2901              		.global	Task7
 2903              	Task7:
 2904              	.LFB7:
 278:../lab12-foreback.c **** 
 279:../lab12-foreback.c **** void Task7( void )  /* Cada vez que se presione un pulsador lo avisa por la UART0 */
 280:../lab12-foreback.c **** {
 2905              		.loc 1 280 0
 2906              		.cfi_startproc
 2907              		@ Function supports interworking.
 2908              		@ args = 0, pretend = 0, frame = 0
 2909              		@ frame_needed = 1, uses_anonymous_args = 0
 2910 05fc 0DC0A0E1 		mov	ip, sp
 2911              	.LCFI14:
 2912              		.cfi_def_cfa_register 12
 2913 0600 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2914 0604 04B04CE2 		sub	fp, ip, #4
 2915              		.cfi_offset 14, -8
 2916              		.cfi_offset 13, -12
 2917              		.cfi_offset 11, -16
 2918              	.LCFI15:
 2919              		.cfi_def_cfa 11, 4
 281:../lab12-foreback.c ****     static boolean init = TRUE;
 282:../lab12-foreback.c **** 
 283:../lab12-foreback.c ****     if( init )
 2920              		.loc 1 283 0
 2921 0608 34309FE5 		ldr	r3, .L55
 2922 060c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2923 0610 000053E3 		cmp	r3, #0
 2924 0614 0500000A 		beq	.L53
 284:../lab12-foreback.c ****     {
 285:../lab12-foreback.c ****         init = FALSE;
 2925              		.loc 1 285 0
 2926 0618 24309FE5 		ldr	r3, .L55
 2927 061c 0020A0E3 		mov	r2, #0
 2928 0620 0020C3E5 		strb	r2, [r3, #0]
 286:../lab12-foreback.c ****         uart0_puts( " Task 7: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2929              		.loc 1 286 0
 2930 0624 1C009FE5 		ldr	r0, .L55+4
 2931 0628 FEFFFFEB 		bl	uart0_puts
 2932 062c 010000EA 		b	.L52
 2933              	.L53:
 287:../lab12-foreback.c ****     }
 288:../lab12-foreback.c ****     else
 289:../lab12-foreback.c ****     {   
 290:../lab12-foreback.c ****         uart0_puts( "  (Task 7) Se ha pulsado algún pushbutton...\n" );
 2934              		.loc 1 290 0
 2935 0630 14009FE5 		ldr	r0, .L55+8
 2936 0634 FEFFFFEB 		bl	uart0_puts
 2937              	.L52:
 291:../lab12-foreback.c ****     }
 292:../lab12-foreback.c **** }
 2938              		.loc 1 292 0
 2939 0638 0CD04BE2 		sub	sp, fp, #12
 2940 063c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2941 0640 1EFF2FE1 		bx	lr
 2942              	.L56:
 2943              		.align	2
 2944              	.L55:
 2945 0644 0A000000 		.word	init.4207
 2946 0648 28010000 		.word	.LC12
 2947 064c 3C010000 		.word	.LC13
 2948              		.cfi_endproc
 2949              	.LFE7:
 2951              		.section	.rodata
 2952 016a 0000     		.align	2
 2953              	.LC14:
 2954 016c 20546173 		.ascii	" Task 8: iniciada.\012\000"
 2954      6B20383A 
 2954      20696E69 
 2954      63696164 
 2954      612E0A00 
 2955              		.text
 2956              		.align	2
 2957              		.global	Task8
 2959              	Task8:
 2960              	.LFB8:
 293:../lab12-foreback.c **** 
 294:../lab12-foreback.c **** void Task8( void ) // Cada vez que reciba un scancode lo escribe en el LCD
 295:../lab12-foreback.c **** {
 2961              		.loc 1 295 0
 2962              		.cfi_startproc
 2963              		@ Function supports interworking.
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 1, uses_anonymous_args = 0
 2966 0650 0DC0A0E1 		mov	ip, sp
 2967              	.LCFI16:
 2968              		.cfi_def_cfa_register 12
 2969 0654 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2970 0658 04B04CE2 		sub	fp, ip, #4
 2971              		.cfi_offset 14, -8
 2972              		.cfi_offset 13, -12
 2973              		.cfi_offset 11, -16
 2974              	.LCFI17:
 2975              		.cfi_def_cfa 11, 4
 2976 065c 08D04DE2 		sub	sp, sp, #8
 296:../lab12-foreback.c **** 	static boolean init = TRUE;
 297:../lab12-foreback.c **** 
 298:../lab12-foreback.c **** 	if( init )
 2977              		.loc 1 298 0
 2978 0660 78309FE5 		ldr	r3, .L60
 2979 0664 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2980 0668 000053E3 		cmp	r3, #0
 2981 066c 0F00000A 		beq	.L58
 299:../lab12-foreback.c **** 	{
 300:../lab12-foreback.c **** 		init = FALSE;
 2982              		.loc 1 300 0
 2983 0670 68309FE5 		ldr	r3, .L60
 2984 0674 0020A0E3 		mov	r2, #0
 2985 0678 0020C3E5 		strb	r2, [r3, #0]
 301:../lab12-foreback.c **** 		uart0_puts( " Task 8: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es necesario
 2986              		.loc 1 301 0
 2987 067c 60009FE5 		ldr	r0, .L60+4
 2988 0680 FEFFFFEB 		bl	uart0_puts
 302:../lab12-foreback.c **** 		lcd_clear();
 2989              		.loc 1 302 0
 2990 0684 FEFFFFEB 		bl	lcd_clear
 303:../lab12-foreback.c **** 		lcd_draw_box( 10, 10, 155, 230, BLACK, 5 );
 2991              		.loc 1 303 0
 2992 0688 0F30A0E3 		mov	r3, #15
 2993 068c 00308DE5 		str	r3, [sp, #0]
 2994 0690 0530A0E3 		mov	r3, #5
 2995 0694 04308DE5 		str	r3, [sp, #4]
 2996 0698 0A00A0E3 		mov	r0, #10
 2997 069c 0A10A0E3 		mov	r1, #10
 2998 06a0 9B20A0E3 		mov	r2, #155
 2999 06a4 E630A0E3 		mov	r3, #230
 3000 06a8 FEFFFFEB 		bl	lcd_draw_box
 3001 06ac 080000EA 		b	.L57
 3002              	.L58:
 304:../lab12-foreback.c **** 	}
 305:../lab12-foreback.c **** 	else
 306:../lab12-foreback.c **** 	{
 307:../lab12-foreback.c **** 		flagTask6 = FALSE;
 3003              		.loc 1 307 0
 3004 06b0 30309FE5 		ldr	r3, .L60+8
 3005 06b4 0020A0E3 		mov	r2, #0
 3006 06b8 0020C3E5 		strb	r2, [r3, #0]
 308:../lab12-foreback.c **** 		lcd_puthex_x2(200, 115, BLACK, scancode );
 3007              		.loc 1 308 0
 3008 06bc 28309FE5 		ldr	r3, .L60+12
 3009 06c0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3010 06c4 C800A0E3 		mov	r0, #200
 3011 06c8 7310A0E3 		mov	r1, #115
 3012 06cc 0F20A0E3 		mov	r2, #15
 3013 06d0 FEFFFFEB 		bl	lcd_puthex_x2
 3014              	.L57:
 309:../lab12-foreback.c **** 	}
 310:../lab12-foreback.c **** 
 311:../lab12-foreback.c **** }
 3015              		.loc 1 311 0
 3016 06d4 0CD04BE2 		sub	sp, fp, #12
 3017 06d8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3018 06dc 1EFF2FE1 		bx	lr
 3019              	.L61:
 3020              		.align	2
 3021              	.L60:
 3022 06e0 09000000 		.word	init.4211
 3023 06e4 6C010000 		.word	.LC14
 3024 06e8 00000000 		.word	flagTask6
 3025 06ec 00000000 		.word	scancode
 3026              		.cfi_endproc
 3027              	.LFE8:
 3029              		.section	.rodata
 3030              		.align	2
 3031              	.LC15:
 3032 0180 20546173 		.ascii	" Task 9: iniciada.\012\000"
 3032      6B20393A 
 3032      20696E69 
 3032      63696164 
 3032      612E0A00 
 3033              		.text
 3034              		.align	2
 3035              		.global	Task9
 3037              	Task9:
 3038              	.LFB9:
 312:../lab12-foreback.c **** 
 313:../lab12-foreback.c **** void Task9( void ) // Escribe cada segundo transcurrido desde el inicio del programa en el LCD
 314:../lab12-foreback.c **** {
 3039              		.loc 1 314 0
 3040              		.cfi_startproc
 3041              		@ Function supports interworking.
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 1, uses_anonymous_args = 0
 3044 06f0 0DC0A0E1 		mov	ip, sp
 3045              	.LCFI18:
 3046              		.cfi_def_cfa_register 12
 3047 06f4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3048 06f8 04B04CE2 		sub	fp, ip, #4
 3049              		.cfi_offset 14, -8
 3050              		.cfi_offset 13, -12
 3051              		.cfi_offset 11, -16
 3052              	.LCFI19:
 3053              		.cfi_def_cfa 11, 4
 3054 06fc 08D04DE2 		sub	sp, sp, #8
 315:../lab12-foreback.c **** 	static boolean init = TRUE;
 316:../lab12-foreback.c **** 	static uint32 og_time;
 317:../lab12-foreback.c **** 	if( init )
 3055              		.loc 1 317 0
 3056 0700 88309FE5 		ldr	r3, .L65
 3057 0704 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3058 0708 000053E3 		cmp	r3, #0
 3059 070c 1100000A 		beq	.L63
 318:../lab12-foreback.c **** 	{
 319:../lab12-foreback.c **** 		init = FALSE;
 3060              		.loc 1 319 0
 3061 0710 78309FE5 		ldr	r3, .L65
 3062 0714 0020A0E3 		mov	r2, #0
 3063 0718 0020C3E5 		strb	r2, [r3, #0]
 320:../lab12-foreback.c **** 		uart0_puts( " Task 9: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es necesario
 3064              		.loc 1 320 0
 3065 071c 70009FE5 		ldr	r0, .L65+4
 3066 0720 FEFFFFEB 		bl	uart0_puts
 321:../lab12-foreback.c **** 		lcd_draw_box( 165, 10, 310, 230, BLACK, 5 );
 3067              		.loc 1 321 0
 3068 0724 0F30A0E3 		mov	r3, #15
 3069 0728 00308DE5 		str	r3, [sp, #0]
 3070 072c 0530A0E3 		mov	r3, #5
 3071 0730 04308DE5 		str	r3, [sp, #4]
 3072 0734 A500A0E3 		mov	r0, #165
 3073 0738 0A10A0E3 		mov	r1, #10
 3074 073c 54209FE5 		ldr	r2, .L65+8
 3075 0740 E630A0E3 		mov	r3, #230
 3076 0744 FEFFFFEB 		bl	lcd_draw_box
 322:../lab12-foreback.c **** 		og_time = 0;
 3077              		.loc 1 322 0
 3078 0748 4C309FE5 		ldr	r3, .L65+12
 3079 074c 0020A0E3 		mov	r2, #0
 3080 0750 002083E5 		str	r2, [r3, #0]
 3081 0754 0A0000EA 		b	.L62
 3082              	.L63:
 323:../lab12-foreback.c **** 	}
 324:../lab12-foreback.c **** 	else
 325:../lab12-foreback.c **** 	{
 326:../lab12-foreback.c **** 		og_time++;
 3083              		.loc 1 326 0
 3084 0758 3C309FE5 		ldr	r3, .L65+12
 3085 075c 003093E5 		ldr	r3, [r3, #0]
 3086 0760 012083E2 		add	r2, r3, #1
 3087 0764 30309FE5 		ldr	r3, .L65+12
 3088 0768 002083E5 		str	r2, [r3, #0]
 327:../lab12-foreback.c **** 		lcd_putint_x2(125, 115, BLACK, og_time );
 3089              		.loc 1 327 0
 3090 076c 28309FE5 		ldr	r3, .L65+12
 3091 0770 003093E5 		ldr	r3, [r3, #0]
 3092 0774 7D00A0E3 		mov	r0, #125
 3093 0778 7310A0E3 		mov	r1, #115
 3094 077c 0F20A0E3 		mov	r2, #15
 3095 0780 FEFFFFEB 		bl	lcd_putint_x2
 3096              	.L62:
 328:../lab12-foreback.c **** 	}
 329:../lab12-foreback.c **** 
 330:../lab12-foreback.c **** }
 3097              		.loc 1 330 0
 3098 0784 0CD04BE2 		sub	sp, fp, #12
 3099 0788 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3100 078c 1EFF2FE1 		bx	lr
 3101              	.L66:
 3102              		.align	2
 3103              	.L65:
 3104 0790 08000000 		.word	init.4215
 3105 0794 80010000 		.word	.LC15
 3106 0798 36010000 		.word	310
 3107 079c 00000000 		.word	og_time.4216
 3108              		.cfi_endproc
 3109              	.LFE9:
 3111              		.align	2
 3112              		.global	isr_pb
 3114              	isr_pb:
 3115              	.LFB10:
 331:../lab12-foreback.c **** /*******************************************************************/
 332:../lab12-foreback.c **** 
 333:../lab12-foreback.c **** void isr_pb( void )
 334:../lab12-foreback.c **** {
 3116              		.loc 1 334 0
 3117              		.cfi_startproc
 3118              		@ Interrupt Service Routine.
 3119              		@ args = 0, pretend = 0, frame = 0
 3120              		@ frame_needed = 1, uses_anonymous_args = 0
 3121 07a0 04C02DE5 		str	ip, [sp, #-4]!
 3122 07a4 0DC0A0E1 		mov	ip, sp
 3123              	.LCFI20:
 3124              		.cfi_def_cfa_register 12
 3125 07a8 0CD82DE9 		stmfd	sp!, {r2, r3, fp, ip, lr, pc}
 3126 07ac 04B04CE2 		sub	fp, ip, #4
 3127              		.cfi_offset 14, -8
 3128              		.cfi_offset 13, -12
 3129              		.cfi_offset 11, -16
 3130              		.cfi_offset 3, -20
 3131              		.cfi_offset 2, -24
 3132              	.LCFI21:
 3133              		.cfi_def_cfa 11, 4
 335:../lab12-foreback.c ****     flagPb = TRUE;
 3134              		.loc 1 335 0
 3135 07b0 2C309FE5 		ldr	r3, .L68
 3136 07b4 0120A0E3 		mov	r2, #1
 3137 07b8 0020C3E5 		strb	r2, [r3, #0]
 336:../lab12-foreback.c ****     EXTINTPND = BIT_RIGHTPB | BIT_LEFTPB;
 3138              		.loc 1 336 0
 3139 07bc 24309FE5 		ldr	r3, .L68+4
 3140 07c0 0C20A0E3 		mov	r2, #12
 3141 07c4 002083E5 		str	r2, [r3, #0]
 337:../lab12-foreback.c ****     I_ISPC = BIT_PB;
 3142              		.loc 1 337 0
 3143 07c8 1C309FE5 		ldr	r3, .L68+8
 3144 07cc 0226A0E3 		mov	r2, #2097152
 3145 07d0 002083E5 		str	r2, [r3, #0]
 338:../lab12-foreback.c **** }
 3146              		.loc 1 338 0
 3147 07d4 14D04BE2 		sub	sp, fp, #20
 3148 07d8 0C689DE8 		ldmfd	sp, {r2, r3, fp, sp, lr}
 3149 07dc 04C09DE4 		ldmfd	sp!, {ip}
 3150 07e0 04F05EE2 		subs	pc, lr, #4
 3151              	.L69:
 3152              		.align	2
 3153              	.L68:
 3154 07e4 00000000 		.word	flagPb
 3155 07e8 5400D201 		.word	30539860
 3156 07ec 2400E001 		.word	31457316
 3157              		.cfi_endproc
 3158              	.LFE10:
 3160              		.align	2
 3161              		.global	isr_tick
 3163              	isr_tick:
 3164              	.LFB11:
 339:../lab12-foreback.c **** 
 340:../lab12-foreback.c **** void isr_tick( void )
 341:../lab12-foreback.c **** {  
 3165              		.loc 1 341 0
 3166              		.cfi_startproc
 3167              		@ Interrupt Service Routine.
 3168              		@ args = 0, pretend = 0, frame = 0
 3169              		@ frame_needed = 1, uses_anonymous_args = 0
 3170 07f0 04C02DE5 		str	ip, [sp, #-4]!
 3171 07f4 0DC0A0E1 		mov	ip, sp
 3172              	.LCFI22:
 3173              		.cfi_def_cfa_register 12
 3174 07f8 0CD82DE9 		stmfd	sp!, {r2, r3, fp, ip, lr, pc}
 3175 07fc 04B04CE2 		sub	fp, ip, #4
 3176              		.cfi_offset 14, -8
 3177              		.cfi_offset 13, -12
 3178              		.cfi_offset 11, -16
 3179              		.cfi_offset 3, -20
 3180              		.cfi_offset 2, -24
 3181              	.LCFI23:
 3182              		.cfi_def_cfa 11, 4
 342:../lab12-foreback.c ****     static uint16 cont5ticks    = 5;
 343:../lab12-foreback.c ****     static uint16 cont50ticks   = 50;
 344:../lab12-foreback.c ****     static uint16 cont100ticks  = 100;
 345:../lab12-foreback.c ****     static uint16 cont1000ticks = 1000;
 346:../lab12-foreback.c ****     
 347:../lab12-foreback.c ****     if( !(--cont5ticks) )
 3183              		.loc 1 347 0
 3184 0800 24319FE5 		ldr	r3, .L75
 3185 0804 B030D3E1 		ldrh	r3, [r3, #0]
 3186 0808 013043E2 		sub	r3, r3, #1
 3187 080c 0338A0E1 		mov	r3, r3, asl #16
 3188 0810 2328A0E1 		mov	r2, r3, lsr #16
 3189 0814 10319FE5 		ldr	r3, .L75
 3190 0818 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3191 081c 08319FE5 		ldr	r3, .L75
 3192 0820 B030D3E1 		ldrh	r3, [r3, #0]
 3193 0824 000053E3 		cmp	r3, #0
 3194 0828 0500001A 		bne	.L71
 348:../lab12-foreback.c ****     {
 349:../lab12-foreback.c ****         cont5ticks = 5;
 3195              		.loc 1 349 0
 3196 082c F8309FE5 		ldr	r3, .L75
 3197 0830 0520A0E3 		mov	r2, #5
 3198 0834 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 350:../lab12-foreback.c ****         flagReadKeypad = TRUE;  
 3199              		.loc 1 350 0
 3200 0838 F0309FE5 		ldr	r3, .L75+4
 3201 083c 0120A0E3 		mov	r2, #1
 3202 0840 0020C3E5 		strb	r2, [r3, #0]
 3203              	.L71:
 351:../lab12-foreback.c ****     }
 352:../lab12-foreback.c ****     if( !(--cont50ticks) )
 3204              		.loc 1 352 0
 3205 0844 E8309FE5 		ldr	r3, .L75+8
 3206 0848 B030D3E1 		ldrh	r3, [r3, #0]
 3207 084c 013043E2 		sub	r3, r3, #1
 3208 0850 0338A0E1 		mov	r3, r3, asl #16
 3209 0854 2328A0E1 		mov	r2, r3, lsr #16
 3210 0858 D4309FE5 		ldr	r3, .L75+8
 3211 085c B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3212 0860 CC309FE5 		ldr	r3, .L75+8
 3213 0864 B030D3E1 		ldrh	r3, [r3, #0]
 3214 0868 000053E3 		cmp	r3, #0
 3215 086c 0500001A 		bne	.L72
 353:../lab12-foreback.c ****     {
 354:../lab12-foreback.c ****         cont50ticks = 50;
 3216              		.loc 1 354 0
 3217 0870 BC309FE5 		ldr	r3, .L75+8
 3218 0874 3220A0E3 		mov	r2, #50
 3219 0878 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 355:../lab12-foreback.c ****         flagToggleLeds = TRUE;
 3220              		.loc 1 355 0
 3221 087c B4309FE5 		ldr	r3, .L75+12
 3222 0880 0120A0E3 		mov	r2, #1
 3223 0884 0020C3E5 		strb	r2, [r3, #0]
 3224              	.L72:
 356:../lab12-foreback.c ****     }        
 357:../lab12-foreback.c ****     if( !(--cont100ticks) )
 3225              		.loc 1 357 0
 3226 0888 AC309FE5 		ldr	r3, .L75+16
 3227 088c B030D3E1 		ldrh	r3, [r3, #0]
 3228 0890 013043E2 		sub	r3, r3, #1
 3229 0894 0338A0E1 		mov	r3, r3, asl #16
 3230 0898 2328A0E1 		mov	r2, r3, lsr #16
 3231 089c 98309FE5 		ldr	r3, .L75+16
 3232 08a0 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3233 08a4 90309FE5 		ldr	r3, .L75+16
 3234 08a8 B030D3E1 		ldrh	r3, [r3, #0]
 3235 08ac 000053E3 		cmp	r3, #0
 3236 08b0 0500001A 		bne	.L73
 358:../lab12-foreback.c ****     {
 359:../lab12-foreback.c ****         cont100ticks = 100;
 3237              		.loc 1 359 0
 3238 08b4 80309FE5 		ldr	r3, .L75+16
 3239 08b8 6420A0E3 		mov	r2, #100
 3240 08bc B020C3E1 		strh	r2, [r3, #0]	@ movhi
 360:../lab12-foreback.c ****         flagWriteRTC  = TRUE;
 3241              		.loc 1 360 0
 3242 08c0 78309FE5 		ldr	r3, .L75+20
 3243 08c4 0120A0E3 		mov	r2, #1
 3244 08c8 0020C3E5 		strb	r2, [r3, #0]
 3245              	.L73:
 361:../lab12-foreback.c ****     }    
 362:../lab12-foreback.c ****     if( !(--cont1000ticks) )
 3246              		.loc 1 362 0
 3247 08cc 70309FE5 		ldr	r3, .L75+24
 3248 08d0 B030D3E1 		ldrh	r3, [r3, #0]
 3249 08d4 013043E2 		sub	r3, r3, #1
 3250 08d8 0338A0E1 		mov	r3, r3, asl #16
 3251 08dc 2328A0E1 		mov	r2, r3, lsr #16
 3252 08e0 5C309FE5 		ldr	r3, .L75+24
 3253 08e4 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3254 08e8 54309FE5 		ldr	r3, .L75+24
 3255 08ec B030D3E1 		ldrh	r3, [r3, #0]
 3256 08f0 000053E3 		cmp	r3, #0
 3257 08f4 0500001A 		bne	.L74
 363:../lab12-foreback.c ****     {
 364:../lab12-foreback.c ****         cont1000ticks = 1000;
 3258              		.loc 1 364 0
 3259 08f8 44309FE5 		ldr	r3, .L75+24
 3260 08fc FA2FA0E3 		mov	r2, #1000
 3261 0900 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 365:../lab12-foreback.c ****         flagWriteTicks = TRUE;
 3262              		.loc 1 365 0
 3263 0904 3C309FE5 		ldr	r3, .L75+28
 3264 0908 0120A0E3 		mov	r2, #1
 3265 090c 0020C3E5 		strb	r2, [r3, #0]
 3266              	.L74:
 366:../lab12-foreback.c ****     }   
 367:../lab12-foreback.c ****     
 368:../lab12-foreback.c ****     I_ISPC = BIT_TIMER0;
 3267              		.loc 1 368 0
 3268 0910 34309FE5 		ldr	r3, .L75+32
 3269 0914 022AA0E3 		mov	r2, #8192
 3270 0918 002083E5 		str	r2, [r3, #0]
 369:../lab12-foreback.c **** };
 3271              		.loc 1 369 0
 3272 091c 14D04BE2 		sub	sp, fp, #20
 3273 0920 0C689DE8 		ldmfd	sp, {r2, r3, fp, sp, lr}
 3274 0924 04C09DE4 		ldmfd	sp!, {ip}
 3275 0928 04F05EE2 		subs	pc, lr, #4
 3276              	.L76:
 3277              		.align	2
 3278              	.L75:
 3279 092c 00000000 		.word	cont5ticks.4223
 3280 0930 00000000 		.word	flagReadKeypad
 3281 0934 02000000 		.word	cont50ticks.4224
 3282 0938 00000000 		.word	flagToggleLeds
 3283 093c 04000000 		.word	cont100ticks.4225
 3284 0940 00000000 		.word	flagWriteRTC
 3285 0944 06000000 		.word	cont1000ticks.4226
 3286 0948 00000000 		.word	flagWriteTicks
 3287 094c 2400E001 		.word	31457316
 3288              		.cfi_endproc
 3289              	.LFE11:
 3291              		.data
 3292              		.align	1
 3295              	cont5ticks.4223:
 3296 0000 0500     		.short	5
 3297              		.align	1
 3300              	cont50ticks.4224:
 3301 0002 3200     		.short	50
 3302              		.align	1
 3305              	cont100ticks.4225:
 3306 0004 6400     		.short	100
 3307              		.align	1
 3310              	cont1000ticks.4226:
 3311 0006 E803     		.short	1000
 3314              	init.4215:
 3315 0008 01       		.byte	1
 3316              		.bss
 3317              		.align	2
 3318              	og_time.4216:
 3319 0000 00000000 		.space	4
 3320              		.data
 3323              	init.4211:
 3324 0009 01       		.byte	1
 3327              	init.4207:
 3328 000a 01       		.byte	1
 3331              	init.4203:
 3332 000b 01       		.byte	1
 3335              	init.4199:
 3336 000c 01       		.byte	1
 3339              	init.4194:
 3340 000d 01       		.byte	1
 3341              		.bss
 3342              		.align	2
 3343              	ticks.4195:
 3344 0004 00000000 		.space	4
 3345              		.data
 3348              	init.4189:
 3349 000e 01       		.byte	1
 3352              	init.4176:
 3353 000f 01       		.byte	1
 3354              		.bss
 3355              	state.4181:
 3356 0008 00       		.space	1
 3357 0009 000000   		.data
 3360              	init.4172:
 3361 0010 01       		.byte	1
 3362 0011 00       		.text
 3363              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 lab12-foreback.c
                            *COM*:00000001 scancode
                            *COM*:00000001 flagTask5
                            *COM*:00000001 flagTask6
                            *COM*:00000001 flagTask8
                            *COM*:00000001 flagPb
                            *COM*:00000001 flagToggleLeds
                            *COM*:00000001 flagReadKeypad
                            *COM*:00000001 flagWriteRTC
                            *COM*:00000001 flagWriteTicks
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2147   .rodata:00000000 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2156   .text:00000000 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2159   .text:00000000 main
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2408   .text:00000260 Task1
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2472   .text:000002c8 Task2
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2610   .text:000003f4 Task3
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2696   .text:00000498 Task4
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2775   .text:0000052c Task5
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2841   .text:000005a0 Task6
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2903   .text:000005fc Task7
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2383   .text:00000228 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2959   .text:00000650 Task8
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3037   .text:000006f0 Task9
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3114   .text:000007a0 isr_pb
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3163   .text:000007f0 isr_tick
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2405   .text:00000260 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2459   .text:000002c0 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3360   .data:00000010 init.4172
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2469   .text:000002c8 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2586   .text:000003d8 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3352   .data:0000000f init.4176
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3355   .bss:00000008 state.4181
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2607   .text:000003f4 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2678   .text:00000488 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3348   .data:0000000e init.4189
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2693   .text:00000498 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2756   .text:00000518 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3339   .data:0000000d init.4194
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3343   .bss:00000004 ticks.4195
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2772   .text:0000052c $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2825   .text:0000058c $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3335   .data:0000000c init.4199
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2838   .text:000005a0 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2885   .text:000005f0 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3331   .data:0000000b init.4203
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2900   .text:000005fc $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2945   .text:00000644 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3327   .data:0000000a init.4207
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:2956   .text:00000650 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3022   .text:000006e0 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3323   .data:00000009 init.4211
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3034   .text:000006f0 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3104   .text:00000790 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3314   .data:00000008 init.4215
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3318   .bss:00000000 og_time.4216
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3111   .text:000007a0 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3154   .text:000007e4 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3160   .text:000007f0 $a
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3279   .text:0000092c $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3295   .data:00000000 cont5ticks.4223
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3300   .data:00000002 cont50ticks.4224
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3305   .data:00000004 cont100ticks.4225
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3310   .data:00000006 cont1000ticks.4226
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3292   .data:00000000 $d
C:\Users\guill\AppData\Local\Temp\ccXqqq8d.s:3317   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sys_init
timers_init
uart0_init
leds_init
segs_init
rtc_init
pbs_init
keypad_init
lcd_init
lcd_clear
lcd_on
uart0_puts
pbs_open
timer0_open_tick
sleep
led_on
led_off
led_toggle
keypad_pressed
keypad_scan
rtc_gettime
uart0_putint
uart0_putchar
uart0_puthex
segs_putchar
lcd_draw_box
lcd_puthex_x2
lcd_putint_x2
