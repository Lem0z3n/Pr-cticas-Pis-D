   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"lab12-queue.c"
  21              	.Ltext0:
  22              		.file 1 "../lab12-queue.c"
 2143              		.align	2
 2144              	.LC0:
 2145 0000 0A0A2045 		.ascii	"\012\012 Ejecutando una aplicaci\363n como cola de "
 2145      6A656375 
 2145      74616E64 
 2145      6F20756E 
 2145      61206170 
 2146 002a 66756E63 		.ascii	"funciones\012\000"
 2146      696F6E65 
 2146      730A00
 2147 0035 000000   		.align	2
 2148              	.LC1:
 2149 0038 202D2D2D 		.ascii	" ------------------------------------------------\012"
 2149      2D2D2D2D 
 2149      2D2D2D2D 
 2149      2D2D2D2D 
 2149      2D2D2D2D 
 2150 006a 0A00     		.ascii	"\012\000"
 2151              		.text
 2152              		.align	2
 2153              		.global	main
 2155              	main:
 2156              	.LFB0:
   1:../lab12-queue.c **** /*-------------------------------------------------------------------
   2:../lab12-queue.c **** **
   3:../lab12-queue.c **** **  Fichero:
   4:../lab12-queue.c **** **    lab12-queue.c  14/1/2021
   5:../lab12-queue.c **** **
   6:../lab12-queue.c **** **    (c) J.M. Mendias
   7:../lab12-queue.c **** **    Programación de Sistemas y Dispositivos
   8:../lab12-queue.c **** **    Facultad de Informática. Universidad Complutense de Madrid
   9:../lab12-queue.c **** **
  10:../lab12-queue.c **** **  Propósito:
  11:../lab12-queue.c **** **    Ejemplo de una aplicación guiada por tiempo con arquitectura
  12:../lab12-queue.c **** **    cola de funciones tipo FIFO
  13:../lab12-queue.c **** **
  14:../lab12-queue.c **** **  Notas de diseño:
  15:../lab12-queue.c **** **
  16:../lab12-queue.c **** **-----------------------------------------------------------------*/
  17:../lab12-queue.c **** 
  18:../lab12-queue.c **** #include <s3c44b0x.h>
  19:../lab12-queue.c **** #include <s3cev40.h>
  20:../lab12-queue.c **** #include <common_types.h>
  21:../lab12-queue.c **** #include <system.h>
  22:../lab12-queue.c **** #include <leds.h>
  23:../lab12-queue.c **** #include <segs.h>
  24:../lab12-queue.c **** #include <uart.h>
  25:../lab12-queue.c **** #include <pbs.h>
  26:../lab12-queue.c **** #include <keypad.h>
  27:../lab12-queue.c **** #include <timers.h>
  28:../lab12-queue.c **** #include <rtc.h>
  29:../lab12-queue.c **** #include <lcd.h>
  30:../lab12-queue.c **** 
  31:../lab12-queue.c **** #define TICKS_PER_SEC   (100)
  32:../lab12-queue.c **** 
  33:../lab12-queue.c **** /* Declaración de fifo de punteros a funciones */
  34:../lab12-queue.c **** 
  35:../lab12-queue.c **** #define BUFFER_LEN   (512)
  36:../lab12-queue.c **** 
  37:../lab12-queue.c **** typedef void (*pf_t)(void);
  38:../lab12-queue.c **** 
  39:../lab12-queue.c **** typedef struct fifo {
  40:../lab12-queue.c ****     uint16 head;
  41:../lab12-queue.c ****     uint16 tail;
  42:../lab12-queue.c ****     uint16 size;
  43:../lab12-queue.c ****     pf_t buffer[BUFFER_LEN];
  44:../lab12-queue.c **** } fifo_t;
  45:../lab12-queue.c **** 
  46:../lab12-queue.c **** void fifo_init( void );
  47:../lab12-queue.c **** void fifo_enqueue( pf_t pf );
  48:../lab12-queue.c **** pf_t fifo_dequeue( void );
  49:../lab12-queue.c **** boolean fifo_is_empty( void );
  50:../lab12-queue.c **** boolean fifo_is_full( void );
  51:../lab12-queue.c **** 
  52:../lab12-queue.c **** /* Declaración de recursos */
  53:../lab12-queue.c **** 
  54:../lab12-queue.c **** volatile fifo_t fifo;
  55:../lab12-queue.c **** 
  56:../lab12-queue.c **** uint8 scancode;
  57:../lab12-queue.c **** 
  58:../lab12-queue.c **** /* Declaración de tareas */
  59:../lab12-queue.c **** 
  60:../lab12-queue.c **** void Task1( void );
  61:../lab12-queue.c **** void Task2( void );
  62:../lab12-queue.c **** void Task3( void );
  63:../lab12-queue.c **** void Task4( void );
  64:../lab12-queue.c **** void Task5( void );
  65:../lab12-queue.c **** void Task6( void );
  66:../lab12-queue.c **** void Task7( void );
  67:../lab12-queue.c **** void Task8( void );
  68:../lab12-queue.c **** void Task9( void );
  69:../lab12-queue.c **** 
  70:../lab12-queue.c **** 
  71:../lab12-queue.c **** /* Declaración de RTI */
  72:../lab12-queue.c **** 
  73:../lab12-queue.c **** void isr_pb( void ) __attribute__ ((interrupt ("IRQ")));
  74:../lab12-queue.c **** void isr_tick( void ) __attribute__ ((interrupt ("IRQ")));
  75:../lab12-queue.c **** 
  76:../lab12-queue.c **** /*******************************************************************/
  77:../lab12-queue.c **** 
  78:../lab12-queue.c **** void main( void )
  79:../lab12-queue.c **** {
 2157              		.loc 1 79 0
 2158              		.cfi_startproc
 2159              		@ Function supports interworking.
 2160              		@ args = 0, pretend = 0, frame = 8
 2161              		@ frame_needed = 1, uses_anonymous_args = 0
 2162 0000 0DC0A0E1 		mov	ip, sp
 2163              	.LCFI0:
 2164              		.cfi_def_cfa_register 12
 2165 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2166 0008 04B04CE2 		sub	fp, ip, #4
 2167              		.cfi_offset 14, -8
 2168              		.cfi_offset 13, -12
 2169              		.cfi_offset 11, -16
 2170              	.LCFI1:
 2171              		.cfi_def_cfa 11, 4
 2172 000c 08D04DE2 		sub	sp, sp, #8
  80:../lab12-queue.c ****     pf_t pf;
  81:../lab12-queue.c ****     
  82:../lab12-queue.c ****     sys_init();      /* Inicializa el sistema */
 2173              		.loc 1 82 0
 2174 0010 FEFFFFEB 		bl	sys_init
  83:../lab12-queue.c ****     timers_init();
 2175              		.loc 1 83 0
 2176 0014 FEFFFFEB 		bl	timers_init
  84:../lab12-queue.c ****     uart0_init();
 2177              		.loc 1 84 0
 2178 0018 FEFFFFEB 		bl	uart0_init
  85:../lab12-queue.c ****     leds_init();
 2179              		.loc 1 85 0
 2180 001c FEFFFFEB 		bl	leds_init
  86:../lab12-queue.c ****     segs_init();
 2181              		.loc 1 86 0
 2182 0020 FEFFFFEB 		bl	segs_init
  87:../lab12-queue.c ****     rtc_init();
 2183              		.loc 1 87 0
 2184 0024 FEFFFFEB 		bl	rtc_init
  88:../lab12-queue.c ****     pbs_init();
 2185              		.loc 1 88 0
 2186 0028 FEFFFFEB 		bl	pbs_init
  89:../lab12-queue.c ****     keypad_init(); 
 2187              		.loc 1 89 0
 2188 002c FEFFFFEB 		bl	keypad_init
  90:../lab12-queue.c ****     lcd_init();
 2189              		.loc 1 90 0
 2190 0030 FEFFFFEB 		bl	lcd_init
  91:../lab12-queue.c **** 
  92:../lab12-queue.c ****     lcd_clear();
 2191              		.loc 1 92 0
 2192 0034 FEFFFFEB 		bl	lcd_clear
  93:../lab12-queue.c ****     lcd_on();
 2193              		.loc 1 93 0
 2194 0038 FEFFFFEB 		bl	lcd_on
  94:../lab12-queue.c **** 
  95:../lab12-queue.c ****     uart0_puts( "\n\n Ejecutando una aplicación como cola de funciones\n" );
 2195              		.loc 1 95 0
 2196 003c 74009FE5 		ldr	r0, .L5
 2197 0040 FEFFFFEB 		bl	uart0_puts
  96:../lab12-queue.c ****     uart0_puts( " ------------------------------------------------\n\n" ) ;
 2198              		.loc 1 96 0
 2199 0044 70009FE5 		ldr	r0, .L5+4
 2200 0048 FEFFFFEB 		bl	uart0_puts
  97:../lab12-queue.c **** 
  98:../lab12-queue.c ****     fifo_init();             /* Inicializa cola de funciones */
 2201              		.loc 1 98 0
 2202 004c FEFFFFEB 		bl	fifo_init
  99:../lab12-queue.c **** 
 100:../lab12-queue.c ****     Task1();    /* Ejecuta por primera vez a las funciones para inicializarlas */
 2203              		.loc 1 100 0
 2204 0050 FEFFFFEB 		bl	Task1
 101:../lab12-queue.c ****     Task2();
 2205              		.loc 1 101 0
 2206 0054 FEFFFFEB 		bl	Task2
 102:../lab12-queue.c ****     Task3();
 2207              		.loc 1 102 0
 2208 0058 FEFFFFEB 		bl	Task3
 103:../lab12-queue.c ****     Task4();
 2209              		.loc 1 103 0
 2210 005c FEFFFFEB 		bl	Task4
 104:../lab12-queue.c ****     Task5();
 2211              		.loc 1 104 0
 2212 0060 FEFFFFEB 		bl	Task5
 105:../lab12-queue.c ****     Task6();
 2213              		.loc 1 105 0
 2214 0064 FEFFFFEB 		bl	Task6
 106:../lab12-queue.c ****     Task7();
 2215              		.loc 1 106 0
 2216 0068 FEFFFFEB 		bl	Task7
 107:../lab12-queue.c ****     Task8();
 2217              		.loc 1 107 0
 2218 006c FEFFFFEB 		bl	Task8
 108:../lab12-queue.c ****     Task9();
 2219              		.loc 1 108 0
 2220 0070 FEFFFFEB 		bl	Task9
 109:../lab12-queue.c **** 
 110:../lab12-queue.c ****     pbs_open( isr_pb );                           /* Instala isr_pb como RTI por presión de pulsado
 2221              		.loc 1 110 0
 2222 0074 44009FE5 		ldr	r0, .L5+8
 2223 0078 FEFFFFEB 		bl	pbs_open
 111:../lab12-queue.c ****     timer0_open_tick( isr_tick, TICKS_PER_SEC );  /* Instala isr_tick como RTI del timer0  */
 2224              		.loc 1 111 0
 2225 007c 40009FE5 		ldr	r0, .L5+12
 2226 0080 6410A0E3 		mov	r1, #100
 2227 0084 FEFFFFEB 		bl	timer0_open_tick
 2228              	.L4:
 112:../lab12-queue.c ****         
 113:../lab12-queue.c ****     while( 1 )
 114:../lab12-queue.c ****     {
 115:../lab12-queue.c ****         sleep();                        /* Entra en estado IDLE, sale por interrupción */
 2229              		.loc 1 115 0
 2230 0088 FEFFFFEB 		bl	sleep
 116:../lab12-queue.c ****         while( !fifo_is_empty() )
 2231              		.loc 1 116 0
 2232 008c 040000EA 		b	.L2
 2233              	.L3:
 117:../lab12-queue.c ****         {
 118:../lab12-queue.c ****             pf = fifo_dequeue();
 2234              		.loc 1 118 0
 2235 0090 FEFFFFEB 		bl	fifo_dequeue
 2236 0094 10000BE5 		str	r0, [fp, #-16]
 119:../lab12-queue.c ****             (*pf)();                    /* Las tareas encoladas se ejecutan en esta hebra (backgrou
 2237              		.loc 1 119 0
 2238 0098 10301BE5 		ldr	r3, [fp, #-16]
 2239 009c 0FE0A0E1 		mov	lr, pc
 2240 00a0 13FF2FE1 		bx	r3
 2241              	.L2:
 116:../lab12-queue.c ****         while( !fifo_is_empty() )
 2242              		.loc 1 116 0 discriminator 1
 2243 00a4 FEFFFFEB 		bl	fifo_is_empty
 2244 00a8 0030A0E1 		mov	r3, r0
 2245 00ac 000053E3 		cmp	r3, #0
 2246 00b0 F6FFFF0A 		beq	.L3
 120:../lab12-queue.c ****         }
 121:../lab12-queue.c ****     }
 2247              		.loc 1 121 0
 2248 00b4 F3FFFFEA 		b	.L4
 2249              	.L6:
 2250              		.align	2
 2251              	.L5:
 2252 00b8 00000000 		.word	.LC0
 2253 00bc 38000000 		.word	.LC1
 2254 00c0 00000000 		.word	isr_pb
 2255 00c4 00000000 		.word	isr_tick
 2256              		.cfi_endproc
 2257              	.LFE0:
 2259              		.section	.rodata
 2260              		.align	2
 2261              	.LC2:
 2262 006c 20546173 		.ascii	" Task 1: iniciada.\012\000"
 2262      6B20313A 
 2262      20696E69 
 2262      63696164 
 2262      612E0A00 
 2263              		.text
 2264              		.align	2
 2265              		.global	Task1
 2267              	Task1:
 2268              	.LFB1:
 122:../lab12-queue.c **** 
 123:../lab12-queue.c **** }
 124:../lab12-queue.c **** 
 125:../lab12-queue.c **** /*******************************************************************/
 126:../lab12-queue.c **** 
 127:../lab12-queue.c **** void Task1( void )  /* Cada 0,5 segundos (50 ticks) alterna el led que se enciende */
 128:../lab12-queue.c **** {
 2269              		.loc 1 128 0
 2270              		.cfi_startproc
 2271              		@ Function supports interworking.
 2272              		@ args = 0, pretend = 0, frame = 0
 2273              		@ frame_needed = 1, uses_anonymous_args = 0
 2274 00c8 0DC0A0E1 		mov	ip, sp
 2275              	.LCFI2:
 2276              		.cfi_def_cfa_register 12
 2277 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2278 00d0 04B04CE2 		sub	fp, ip, #4
 2279              		.cfi_offset 14, -8
 2280              		.cfi_offset 13, -12
 2281              		.cfi_offset 11, -16
 2282              	.LCFI3:
 2283              		.cfi_def_cfa 11, 4
 129:../lab12-queue.c ****     static boolean init = TRUE;
 130:../lab12-queue.c ****   
 131:../lab12-queue.c ****     if( init )
 2284              		.loc 1 131 0
 2285 00d4 4C309FE5 		ldr	r3, .L10
 2286 00d8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2287 00dc 000053E3 		cmp	r3, #0
 2288 00e0 0900000A 		beq	.L8
 132:../lab12-queue.c ****     {
 133:../lab12-queue.c ****         init = FALSE;
 2289              		.loc 1 133 0
 2290 00e4 3C309FE5 		ldr	r3, .L10
 2291 00e8 0020A0E3 		mov	r2, #0
 2292 00ec 0020C3E5 		strb	r2, [r3, #0]
 134:../lab12-queue.c ****         uart0_puts( " Task 1: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2293              		.loc 1 134 0
 2294 00f0 34009FE5 		ldr	r0, .L10+4
 2295 00f4 FEFFFFEB 		bl	uart0_puts
 135:../lab12-queue.c ****         led_on( LEFT_LED );
 2296              		.loc 1 135 0
 2297 00f8 0100A0E3 		mov	r0, #1
 2298 00fc FEFFFFEB 		bl	led_on
 136:../lab12-queue.c ****         led_off( RIGHT_LED );
 2299              		.loc 1 136 0
 2300 0100 0200A0E3 		mov	r0, #2
 2301 0104 FEFFFFEB 		bl	led_off
 2302 0108 030000EA 		b	.L7
 2303              	.L8:
 137:../lab12-queue.c ****     }
 138:../lab12-queue.c ****     else
 139:../lab12-queue.c ****     {
 140:../lab12-queue.c ****         led_toggle( LEFT_LED );
 2304              		.loc 1 140 0
 2305 010c 0100A0E3 		mov	r0, #1
 2306 0110 FEFFFFEB 		bl	led_toggle
 141:../lab12-queue.c ****         led_toggle( RIGHT_LED );
 2307              		.loc 1 141 0
 2308 0114 0200A0E3 		mov	r0, #2
 2309 0118 FEFFFFEB 		bl	led_toggle
 2310              	.L7:
 142:../lab12-queue.c ****     }
 143:../lab12-queue.c **** }
 2311              		.loc 1 143 0
 2312 011c 0CD04BE2 		sub	sp, fp, #12
 2313 0120 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2314 0124 1EFF2FE1 		bx	lr
 2315              	.L11:
 2316              		.align	2
 2317              	.L10:
 2318 0128 10000000 		.word	init.4187
 2319 012c 6C000000 		.word	.LC2
 2320              		.cfi_endproc
 2321              	.LFE1:
 2323              		.section	.rodata
 2324              		.align	2
 2325              	.LC3:
 2326 0080 20546173 		.ascii	" Task 2: iniciada.\012\000"
 2326      6B20323A 
 2326      20696E69 
 2326      63696164 
 2326      612E0A00 
 2327              		.text
 2328              		.align	2
 2329              		.global	Task2
 2331              	Task2:
 2332              	.LFB2:
 144:../lab12-queue.c **** 
 145:../lab12-queue.c **** void Task2( void )  /* Cada 50 ms (5 ticks) muestrea el keypad y envía el scancode a otras tareas *
 146:../lab12-queue.c **** {
 2333              		.loc 1 146 0
 2334              		.cfi_startproc
 2335              		@ Function supports interworking.
 2336              		@ args = 0, pretend = 0, frame = 0
 2337              		@ frame_needed = 1, uses_anonymous_args = 0
 2338 0130 0DC0A0E1 		mov	ip, sp
 2339              	.LCFI4:
 2340              		.cfi_def_cfa_register 12
 2341 0134 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2342 0138 04B04CE2 		sub	fp, ip, #4
 2343              		.cfi_offset 14, -8
 2344              		.cfi_offset 13, -12
 2345              		.cfi_offset 11, -16
 2346              	.LCFI5:
 2347              		.cfi_def_cfa 11, 4
 147:../lab12-queue.c ****     static boolean init = TRUE;
 148:../lab12-queue.c ****     static enum { wait_keydown, scan, wait_keyup } state;
 149:../lab12-queue.c **** 
 150:../lab12-queue.c ****     if( init )
 2348              		.loc 1 150 0
 2349 013c F0309FE5 		ldr	r3, .L23
 2350 0140 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2351 0144 000053E3 		cmp	r3, #0
 2352 0148 0800000A 		beq	.L13
 151:../lab12-queue.c ****     {
 152:../lab12-queue.c ****         init  = FALSE;
 2353              		.loc 1 152 0
 2354 014c E0309FE5 		ldr	r3, .L23
 2355 0150 0020A0E3 		mov	r2, #0
 2356 0154 0020C3E5 		strb	r2, [r3, #0]
 153:../lab12-queue.c ****         uart0_puts( " Task 2: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2357              		.loc 1 153 0
 2358 0158 D8009FE5 		ldr	r0, .L23+4
 2359 015c FEFFFFEB 		bl	uart0_puts
 154:../lab12-queue.c ****         state = wait_keydown;
 2360              		.loc 1 154 0
 2361 0160 D4309FE5 		ldr	r3, .L23+8
 2362 0164 0020A0E3 		mov	r2, #0
 2363 0168 0020C3E5 		strb	r2, [r3, #0]
 2364 016c 2D0000EA 		b	.L12
 2365              	.L13:
 155:../lab12-queue.c ****     }
 156:../lab12-queue.c ****     else switch( state )
 2366              		.loc 1 156 0
 2367 0170 C4309FE5 		ldr	r3, .L23+8
 2368 0174 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2369 0178 010053E3 		cmp	r3, #1
 2370 017c 0B00000A 		beq	.L16
 2371 0180 020053E3 		cmp	r3, #2
 2372 0184 1C00000A 		beq	.L17
 2373 0188 000053E3 		cmp	r3, #0
 2374 018c 2500001A 		bne	.L12
 2375              	.L15:
 157:../lab12-queue.c ****     {
 158:../lab12-queue.c ****         case wait_keydown:
 159:../lab12-queue.c ****             if( keypad_pressed() )
 2376              		.loc 1 159 0
 2377 0190 FEFFFFEB 		bl	keypad_pressed
 2378 0194 0030A0E1 		mov	r3, r0
 2379 0198 000053E3 		cmp	r3, #0
 2380 019c 1E00000A 		beq	.L21
 160:../lab12-queue.c ****                 state = scan;
 2381              		.loc 1 160 0
 2382 01a0 94309FE5 		ldr	r3, .L23+8
 2383 01a4 0120A0E3 		mov	r2, #1
 2384 01a8 0020C3E5 		strb	r2, [r3, #0]
 161:../lab12-queue.c ****             break;
 2385              		.loc 1 161 0
 2386 01ac 1D0000EA 		b	.L12
 2387              	.L16:
 162:../lab12-queue.c ****         case scan:
 163:../lab12-queue.c ****             scancode = keypad_scan();
 2388              		.loc 1 163 0
 2389 01b0 FEFFFFEB 		bl	keypad_scan
 2390 01b4 0030A0E1 		mov	r3, r0
 2391 01b8 0320A0E1 		mov	r2, r3
 2392 01bc 7C309FE5 		ldr	r3, .L23+12
 2393 01c0 0020C3E5 		strb	r2, [r3, #0]
 164:../lab12-queue.c ****             if( scancode != KEYPAD_FAILURE )
 2394              		.loc 1 164 0
 2395 01c4 74309FE5 		ldr	r3, .L23+12
 2396 01c8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2397 01cc FF0053E3 		cmp	r3, #255
 2398 01d0 0500000A 		beq	.L19
 165:../lab12-queue.c ****             {
 166:../lab12-queue.c ****                 fifo_enqueue( Task5 );
 2399              		.loc 1 166 0
 2400 01d4 68009FE5 		ldr	r0, .L23+16
 2401 01d8 FEFFFFEB 		bl	fifo_enqueue
 167:../lab12-queue.c ****                 fifo_enqueue( Task6 );
 2402              		.loc 1 167 0
 2403 01dc 64009FE5 		ldr	r0, .L23+20
 2404 01e0 FEFFFFEB 		bl	fifo_enqueue
 168:../lab12-queue.c ****                 fifo_enqueue( Task8 );
 2405              		.loc 1 168 0
 2406 01e4 60009FE5 		ldr	r0, .L23+24
 2407 01e8 FEFFFFEB 		bl	fifo_enqueue
 2408              	.L19:
 169:../lab12-queue.c ****             }
 170:../lab12-queue.c ****             state = wait_keyup;
 2409              		.loc 1 170 0
 2410 01ec 48309FE5 		ldr	r3, .L23+8
 2411 01f0 0220A0E3 		mov	r2, #2
 2412 01f4 0020C3E5 		strb	r2, [r3, #0]
 171:../lab12-queue.c ****             break;
 2413              		.loc 1 171 0
 2414 01f8 0A0000EA 		b	.L12
 2415              	.L17:
 172:../lab12-queue.c ****         case wait_keyup:
 173:../lab12-queue.c ****             if( !keypad_pressed() )
 2416              		.loc 1 173 0
 2417 01fc FEFFFFEB 		bl	keypad_pressed
 2418 0200 0030A0E1 		mov	r3, r0
 2419 0204 000053E3 		cmp	r3, #0
 2420 0208 0500001A 		bne	.L22
 174:../lab12-queue.c ****                 state = wait_keydown;
 2421              		.loc 1 174 0
 2422 020c 28309FE5 		ldr	r3, .L23+8
 2423 0210 0020A0E3 		mov	r2, #0
 2424 0214 0020C3E5 		strb	r2, [r3, #0]
 175:../lab12-queue.c ****             break;
 2425              		.loc 1 175 0
 2426 0218 020000EA 		b	.L12
 2427              	.L21:
 161:../lab12-queue.c ****             break;
 2428              		.loc 1 161 0
 2429 021c 0000A0E1 		mov	r0, r0	@ nop
 2430 0220 000000EA 		b	.L12
 2431              	.L22:
 2432              		.loc 1 175 0
 2433 0224 0000A0E1 		mov	r0, r0	@ nop
 2434              	.L12:
 176:../lab12-queue.c ****     }
 177:../lab12-queue.c **** }
 2435              		.loc 1 177 0
 2436 0228 0CD04BE2 		sub	sp, fp, #12
 2437 022c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2438 0230 1EFF2FE1 		bx	lr
 2439              	.L24:
 2440              		.align	2
 2441              	.L23:
 2442 0234 0F000000 		.word	init.4191
 2443 0238 80000000 		.word	.LC3
 2444 023c 08000000 		.word	state.4196
 2445 0240 00000000 		.word	scancode
 2446 0244 00000000 		.word	Task5
 2447 0248 00000000 		.word	Task6
 2448 024c 00000000 		.word	Task8
 2449              		.cfi_endproc
 2450              	.LFE2:
 2452              		.section	.rodata
 2453              		.align	2
 2454              	.LC4:
 2455 0094 20546173 		.ascii	" Task 3: iniciada.\012\000"
 2455      6B20333A 
 2455      20696E69 
 2455      63696164 
 2455      612E0A00 
 2456              		.align	2
 2457              	.LC5:
 2458 00a8 20202854 		.ascii	"  (Task 3) Hora: \000"
 2458      61736B20 
 2458      33292048 
 2458      6F72613A 
 2458      2000
 2459 00ba 0000     		.align	2
 2460              	.LC6:
 2461 00bc 0A00     		.ascii	"\012\000"
 2462              		.text
 2463              		.align	2
 2464              		.global	Task3
 2466              	Task3:
 2467              	.LFB3:
 178:../lab12-queue.c **** 
 179:../lab12-queue.c **** void Task3( void  )  /* Cada segundo (100 ticks) muestra por la UART0 la hora del RTC */
 180:../lab12-queue.c **** {
 2468              		.loc 1 180 0
 2469              		.cfi_startproc
 2470              		@ Function supports interworking.
 2471              		@ args = 0, pretend = 0, frame = 8
 2472              		@ frame_needed = 1, uses_anonymous_args = 0
 2473 0250 0DC0A0E1 		mov	ip, sp
 2474              	.LCFI6:
 2475              		.cfi_def_cfa_register 12
 2476 0254 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2477 0258 04B04CE2 		sub	fp, ip, #4
 2478              		.cfi_offset 14, -8
 2479              		.cfi_offset 13, -12
 2480              		.cfi_offset 11, -16
 2481              	.LCFI7:
 2482              		.cfi_def_cfa 11, 4
 2483 025c 08D04DE2 		sub	sp, sp, #8
 181:../lab12-queue.c ****     static boolean init = TRUE;
 182:../lab12-queue.c ****     rtc_time_t rtc_time;
 183:../lab12-queue.c ****     
 184:../lab12-queue.c ****     if( init )
 2484              		.loc 1 184 0
 2485 0260 7C309FE5 		ldr	r3, .L28
 2486 0264 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2487 0268 000053E3 		cmp	r3, #0
 2488 026c 0500000A 		beq	.L26
 185:../lab12-queue.c ****     {
 186:../lab12-queue.c ****         init = FALSE;
 2489              		.loc 1 186 0
 2490 0270 6C309FE5 		ldr	r3, .L28
 2491 0274 0020A0E3 		mov	r2, #0
 2492 0278 0020C3E5 		strb	r2, [r3, #0]
 187:../lab12-queue.c ****         uart0_puts( " Task 3: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2493              		.loc 1 187 0
 2494 027c 64009FE5 		ldr	r0, .L28+4
 2495 0280 FEFFFFEB 		bl	uart0_puts
 2496 0284 130000EA 		b	.L25
 2497              	.L26:
 188:../lab12-queue.c ****     }
 189:../lab12-queue.c ****     else
 190:../lab12-queue.c ****     {
 191:../lab12-queue.c ****         rtc_gettime( &rtc_time );
 2498              		.loc 1 191 0
 2499 0288 14304BE2 		sub	r3, fp, #20
 2500 028c 0300A0E1 		mov	r0, r3
 2501 0290 FEFFFFEB 		bl	rtc_gettime
 192:../lab12-queue.c ****         uart0_puts( "  (Task 3) Hora: " );
 2502              		.loc 1 192 0
 2503 0294 50009FE5 		ldr	r0, .L28+8
 2504 0298 FEFFFFEB 		bl	uart0_puts
 193:../lab12-queue.c ****         uart0_putint( rtc_time.hour );
 2505              		.loc 1 193 0
 2506 029c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2507 02a0 0300A0E1 		mov	r0, r3
 2508 02a4 FEFFFFEB 		bl	uart0_putint
 194:../lab12-queue.c ****         uart0_putchar( ':' );
 2509              		.loc 1 194 0
 2510 02a8 3A00A0E3 		mov	r0, #58
 2511 02ac FEFFFFEB 		bl	uart0_putchar
 195:../lab12-queue.c ****         uart0_putint( rtc_time.min );
 2512              		.loc 1 195 0
 2513 02b0 13305BE5 		ldrb	r3, [fp, #-19]	@ zero_extendqisi2
 2514 02b4 0300A0E1 		mov	r0, r3
 2515 02b8 FEFFFFEB 		bl	uart0_putint
 196:../lab12-queue.c ****         uart0_putchar( ':' );
 2516              		.loc 1 196 0
 2517 02bc 3A00A0E3 		mov	r0, #58
 2518 02c0 FEFFFFEB 		bl	uart0_putchar
 197:../lab12-queue.c ****         uart0_putint( rtc_time.sec );
 2519              		.loc 1 197 0
 2520 02c4 14305BE5 		ldrb	r3, [fp, #-20]	@ zero_extendqisi2
 2521 02c8 0300A0E1 		mov	r0, r3
 2522 02cc FEFFFFEB 		bl	uart0_putint
 198:../lab12-queue.c ****         uart0_puts( "\n" );
 2523              		.loc 1 198 0
 2524 02d0 18009FE5 		ldr	r0, .L28+12
 2525 02d4 FEFFFFEB 		bl	uart0_puts
 2526              	.L25:
 199:../lab12-queue.c ****     }
 200:../lab12-queue.c **** }
 2527              		.loc 1 200 0
 2528 02d8 0CD04BE2 		sub	sp, fp, #12
 2529 02dc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2530 02e0 1EFF2FE1 		bx	lr
 2531              	.L29:
 2532              		.align	2
 2533              	.L28:
 2534 02e4 0E000000 		.word	init.4204
 2535 02e8 94000000 		.word	.LC4
 2536 02ec A8000000 		.word	.LC5
 2537 02f0 BC000000 		.word	.LC6
 2538              		.cfi_endproc
 2539              	.LFE3:
 2541              		.section	.rodata
 2542 00be 0000     		.align	2
 2543              	.LC7:
 2544 00c0 20546173 		.ascii	" Task 4: iniciada.\012\000"
 2544      6B20343A 
 2544      20696E69 
 2544      63696164 
 2544      612E0A00 
 2545              		.align	2
 2546              	.LC8:
 2547 00d4 20202854 		.ascii	"  (Task 4) Ticks: \000"
 2547      61736B20 
 2547      34292054 
 2547      69636B73 
 2547      3A2000
 2548              		.text
 2549              		.align	2
 2550              		.global	Task4
 2552              	Task4:
 2553              	.LFB4:
 201:../lab12-queue.c **** 
 202:../lab12-queue.c **** void Task4( void )  /* Cada 10 segundos (1000 ticks) muestra por la UART0 los ticks transcurridos *
 203:../lab12-queue.c **** {
 2554              		.loc 1 203 0
 2555              		.cfi_startproc
 2556              		@ Function supports interworking.
 2557              		@ args = 0, pretend = 0, frame = 0
 2558              		@ frame_needed = 1, uses_anonymous_args = 0
 2559 02f4 0DC0A0E1 		mov	ip, sp
 2560              	.LCFI8:
 2561              		.cfi_def_cfa_register 12
 2562 02f8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2563 02fc 04B04CE2 		sub	fp, ip, #4
 2564              		.cfi_offset 14, -8
 2565              		.cfi_offset 13, -12
 2566              		.cfi_offset 11, -16
 2567              	.LCFI9:
 2568              		.cfi_def_cfa 11, 4
 204:../lab12-queue.c ****     static boolean init = TRUE;
 205:../lab12-queue.c ****     static uint32 ticks;
 206:../lab12-queue.c ****     
 207:../lab12-queue.c ****     if( init )
 2569              		.loc 1 207 0
 2570 0300 6C309FE5 		ldr	r3, .L33
 2571 0304 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2572 0308 000053E3 		cmp	r3, #0
 2573 030c 0800000A 		beq	.L31
 208:../lab12-queue.c ****     {
 209:../lab12-queue.c ****         init = FALSE;
 2574              		.loc 1 209 0
 2575 0310 5C309FE5 		ldr	r3, .L33
 2576 0314 0020A0E3 		mov	r2, #0
 2577 0318 0020C3E5 		strb	r2, [r3, #0]
 210:../lab12-queue.c ****         uart0_puts( " Task 4: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2578              		.loc 1 210 0
 2579 031c 54009FE5 		ldr	r0, .L33+4
 2580 0320 FEFFFFEB 		bl	uart0_puts
 211:../lab12-queue.c ****         ticks = 0;
 2581              		.loc 1 211 0
 2582 0324 50309FE5 		ldr	r3, .L33+8
 2583 0328 0020A0E3 		mov	r2, #0
 2584 032c 002083E5 		str	r2, [r3, #0]
 2585 0330 0C0000EA 		b	.L30
 2586              	.L31:
 212:../lab12-queue.c ****     }
 213:../lab12-queue.c ****     else
 214:../lab12-queue.c ****     {
 215:../lab12-queue.c ****         ticks += TICKS_PER_SEC * 10;
 2587              		.loc 1 215 0
 2588 0334 40309FE5 		ldr	r3, .L33+8
 2589 0338 003093E5 		ldr	r3, [r3, #0]
 2590 033c FA2F83E2 		add	r2, r3, #1000
 2591 0340 34309FE5 		ldr	r3, .L33+8
 2592 0344 002083E5 		str	r2, [r3, #0]
 216:../lab12-queue.c ****         uart0_puts( "  (Task 4) Ticks: " );
 2593              		.loc 1 216 0
 2594 0348 30009FE5 		ldr	r0, .L33+12
 2595 034c FEFFFFEB 		bl	uart0_puts
 217:../lab12-queue.c ****         uart0_putint( ticks );
 2596              		.loc 1 217 0
 2597 0350 24309FE5 		ldr	r3, .L33+8
 2598 0354 003093E5 		ldr	r3, [r3, #0]
 2599 0358 0300A0E1 		mov	r0, r3
 2600 035c FEFFFFEB 		bl	uart0_putint
 218:../lab12-queue.c ****         uart0_puts( "\n" );
 2601              		.loc 1 218 0
 2602 0360 1C009FE5 		ldr	r0, .L33+16
 2603 0364 FEFFFFEB 		bl	uart0_puts
 2604              	.L30:
 219:../lab12-queue.c ****     }
 220:../lab12-queue.c **** }
 2605              		.loc 1 220 0
 2606 0368 0CD04BE2 		sub	sp, fp, #12
 2607 036c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2608 0370 1EFF2FE1 		bx	lr
 2609              	.L34:
 2610              		.align	2
 2611              	.L33:
 2612 0374 0D000000 		.word	init.4209
 2613 0378 C0000000 		.word	.LC7
 2614 037c 04000000 		.word	ticks.4210
 2615 0380 D4000000 		.word	.LC8
 2616 0384 BC000000 		.word	.LC6
 2617              		.cfi_endproc
 2618              	.LFE4:
 2620              		.section	.rodata
 2621 00e7 00       		.align	2
 2622              	.LC9:
 2623 00e8 20546173 		.ascii	" Task 5: iniciada.\012\000"
 2623      6B20353A 
 2623      20696E69 
 2623      63696164 
 2623      612E0A00 
 2624              		.align	2
 2625              	.LC10:
 2626 00fc 20202854 		.ascii	"  (Task 5) Tecla pulsada: \000"
 2626      61736B20 
 2626      35292054 
 2626      65636C61 
 2626      2070756C 
 2627              		.text
 2628              		.align	2
 2629              		.global	Task5
 2631              	Task5:
 2632              	.LFB5:
 221:../lab12-queue.c **** 
 222:../lab12-queue.c **** void Task5( void )  /* Cada vez que reciba un scancode lo muestra por la UART0 */
 223:../lab12-queue.c **** {
 2633              		.loc 1 223 0
 2634              		.cfi_startproc
 2635              		@ Function supports interworking.
 2636              		@ args = 0, pretend = 0, frame = 0
 2637              		@ frame_needed = 1, uses_anonymous_args = 0
 2638 0388 0DC0A0E1 		mov	ip, sp
 2639              	.LCFI10:
 2640              		.cfi_def_cfa_register 12
 2641 038c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2642 0390 04B04CE2 		sub	fp, ip, #4
 2643              		.cfi_offset 14, -8
 2644              		.cfi_offset 13, -12
 2645              		.cfi_offset 11, -16
 2646              	.LCFI11:
 2647              		.cfi_def_cfa 11, 4
 224:../lab12-queue.c ****     static boolean init = TRUE;
 225:../lab12-queue.c **** 
 226:../lab12-queue.c ****     if( init )
 2648              		.loc 1 226 0
 2649 0394 4C309FE5 		ldr	r3, .L38
 2650 0398 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2651 039c 000053E3 		cmp	r3, #0
 2652 03a0 0500000A 		beq	.L36
 227:../lab12-queue.c ****     {
 228:../lab12-queue.c ****         init = FALSE;
 2653              		.loc 1 228 0
 2654 03a4 3C309FE5 		ldr	r3, .L38
 2655 03a8 0020A0E3 		mov	r2, #0
 2656 03ac 0020C3E5 		strb	r2, [r3, #0]
 229:../lab12-queue.c ****         uart0_puts( " Task 5: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2657              		.loc 1 229 0
 2658 03b0 34009FE5 		ldr	r0, .L38+4
 2659 03b4 FEFFFFEB 		bl	uart0_puts
 2660 03b8 070000EA 		b	.L35
 2661              	.L36:
 230:../lab12-queue.c ****     }
 231:../lab12-queue.c ****     else
 232:../lab12-queue.c ****     {
 233:../lab12-queue.c ****         uart0_puts( "  (Task 5) Tecla pulsada: " );
 2662              		.loc 1 233 0
 2663 03bc 2C009FE5 		ldr	r0, .L38+8
 2664 03c0 FEFFFFEB 		bl	uart0_puts
 234:../lab12-queue.c ****         uart0_puthex( scancode );
 2665              		.loc 1 234 0
 2666 03c4 28309FE5 		ldr	r3, .L38+12
 2667 03c8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2668 03cc 0300A0E1 		mov	r0, r3
 2669 03d0 FEFFFFEB 		bl	uart0_puthex
 235:../lab12-queue.c ****         uart0_puts( "\n" );
 2670              		.loc 1 235 0
 2671 03d4 1C009FE5 		ldr	r0, .L38+16
 2672 03d8 FEFFFFEB 		bl	uart0_puts
 2673              	.L35:
 236:../lab12-queue.c ****     }
 237:../lab12-queue.c **** }
 2674              		.loc 1 237 0
 2675 03dc 0CD04BE2 		sub	sp, fp, #12
 2676 03e0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2677 03e4 1EFF2FE1 		bx	lr
 2678              	.L39:
 2679              		.align	2
 2680              	.L38:
 2681 03e8 0C000000 		.word	init.4214
 2682 03ec E8000000 		.word	.LC9
 2683 03f0 FC000000 		.word	.LC10
 2684 03f4 00000000 		.word	scancode
 2685 03f8 BC000000 		.word	.LC6
 2686              		.cfi_endproc
 2687              	.LFE5:
 2689              		.section	.rodata
 2690 0117 00       		.align	2
 2691              	.LC11:
 2692 0118 20546173 		.ascii	" Task 6: iniciada.\012\000"
 2692      6B20363A 
 2692      20696E69 
 2692      63696164 
 2692      612E0A00 
 2693              		.text
 2694              		.align	2
 2695              		.global	Task6
 2697              	Task6:
 2698              	.LFB6:
 238:../lab12-queue.c **** 
 239:../lab12-queue.c **** void Task6( void )  /* Cada vez que reciba un scancode lo muestra por los 7 segmentos */
 240:../lab12-queue.c **** {
 2699              		.loc 1 240 0
 2700              		.cfi_startproc
 2701              		@ Function supports interworking.
 2702              		@ args = 0, pretend = 0, frame = 0
 2703              		@ frame_needed = 1, uses_anonymous_args = 0
 2704 03fc 0DC0A0E1 		mov	ip, sp
 2705              	.LCFI12:
 2706              		.cfi_def_cfa_register 12
 2707 0400 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2708 0404 04B04CE2 		sub	fp, ip, #4
 2709              		.cfi_offset 14, -8
 2710              		.cfi_offset 13, -12
 2711              		.cfi_offset 11, -16
 2712              	.LCFI13:
 2713              		.cfi_def_cfa 11, 4
 241:../lab12-queue.c ****     static boolean init = TRUE;
 242:../lab12-queue.c **** 
 243:../lab12-queue.c ****     if( init )
 2714              		.loc 1 243 0
 2715 0408 3C309FE5 		ldr	r3, .L43
 2716 040c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2717 0410 000053E3 		cmp	r3, #0
 2718 0414 0500000A 		beq	.L41
 244:../lab12-queue.c ****     {
 245:../lab12-queue.c ****         init = FALSE;
 2719              		.loc 1 245 0
 2720 0418 2C309FE5 		ldr	r3, .L43
 2721 041c 0020A0E3 		mov	r2, #0
 2722 0420 0020C3E5 		strb	r2, [r3, #0]
 246:../lab12-queue.c ****         uart0_puts( " Task 6: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2723              		.loc 1 246 0
 2724 0424 24009FE5 		ldr	r0, .L43+4
 2725 0428 FEFFFFEB 		bl	uart0_puts
 2726 042c 030000EA 		b	.L40
 2727              	.L41:
 247:../lab12-queue.c ****     }
 248:../lab12-queue.c ****     else
 249:../lab12-queue.c ****     {
 250:../lab12-queue.c ****         segs_putchar( scancode );
 2728              		.loc 1 250 0
 2729 0430 1C309FE5 		ldr	r3, .L43+8
 2730 0434 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2731 0438 0300A0E1 		mov	r0, r3
 2732 043c FEFFFFEB 		bl	segs_putchar
 2733              	.L40:
 251:../lab12-queue.c ****     }
 252:../lab12-queue.c **** }
 2734              		.loc 1 252 0
 2735 0440 0CD04BE2 		sub	sp, fp, #12
 2736 0444 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2737 0448 1EFF2FE1 		bx	lr
 2738              	.L44:
 2739              		.align	2
 2740              	.L43:
 2741 044c 0B000000 		.word	init.4218
 2742 0450 18010000 		.word	.LC11
 2743 0454 00000000 		.word	scancode
 2744              		.cfi_endproc
 2745              	.LFE6:
 2747              		.section	.rodata
 2748              		.align	2
 2749              	.LC12:
 2750 012c 20546173 		.ascii	" Task 7: iniciada.\012\000"
 2750      6B20373A 
 2750      20696E69 
 2750      63696164 
 2750      612E0A00 
 2751              		.align	2
 2752              	.LC13:
 2753 0140 20202854 		.ascii	"  (Task 7) Se ha pulsado alg\372n pushbutton...\012"
 2753      61736B20 
 2753      37292053 
 2753      65206861 
 2753      2070756C 
 2754 016d 00       		.ascii	"\000"
 2755              		.text
 2756              		.align	2
 2757              		.global	Task7
 2759              	Task7:
 2760              	.LFB7:
 253:../lab12-queue.c **** 
 254:../lab12-queue.c **** void Task7( void )  /* Cada vez que se presione un pulsador lo avisa por la UART0 */
 255:../lab12-queue.c **** {
 2761              		.loc 1 255 0
 2762              		.cfi_startproc
 2763              		@ Function supports interworking.
 2764              		@ args = 0, pretend = 0, frame = 0
 2765              		@ frame_needed = 1, uses_anonymous_args = 0
 2766 0458 0DC0A0E1 		mov	ip, sp
 2767              	.LCFI14:
 2768              		.cfi_def_cfa_register 12
 2769 045c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2770 0460 04B04CE2 		sub	fp, ip, #4
 2771              		.cfi_offset 14, -8
 2772              		.cfi_offset 13, -12
 2773              		.cfi_offset 11, -16
 2774              	.LCFI15:
 2775              		.cfi_def_cfa 11, 4
 256:../lab12-queue.c ****     static boolean init = TRUE;
 257:../lab12-queue.c **** 
 258:../lab12-queue.c ****     if( init )
 2776              		.loc 1 258 0
 2777 0464 34309FE5 		ldr	r3, .L48
 2778 0468 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2779 046c 000053E3 		cmp	r3, #0
 2780 0470 0500000A 		beq	.L46
 259:../lab12-queue.c ****     {
 260:../lab12-queue.c ****         init = FALSE;
 2781              		.loc 1 260 0
 2782 0474 24309FE5 		ldr	r3, .L48
 2783 0478 0020A0E3 		mov	r2, #0
 2784 047c 0020C3E5 		strb	r2, [r3, #0]
 261:../lab12-queue.c ****         uart0_puts( " Task 7: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es nec
 2785              		.loc 1 261 0
 2786 0480 1C009FE5 		ldr	r0, .L48+4
 2787 0484 FEFFFFEB 		bl	uart0_puts
 2788 0488 010000EA 		b	.L45
 2789              	.L46:
 262:../lab12-queue.c ****     }
 263:../lab12-queue.c ****     else
 264:../lab12-queue.c ****     {   
 265:../lab12-queue.c ****         uart0_puts( "  (Task 7) Se ha pulsado algún pushbutton...\n" );
 2790              		.loc 1 265 0
 2791 048c 14009FE5 		ldr	r0, .L48+8
 2792 0490 FEFFFFEB 		bl	uart0_puts
 2793              	.L45:
 266:../lab12-queue.c ****     }
 267:../lab12-queue.c **** }
 2794              		.loc 1 267 0
 2795 0494 0CD04BE2 		sub	sp, fp, #12
 2796 0498 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2797 049c 1EFF2FE1 		bx	lr
 2798              	.L49:
 2799              		.align	2
 2800              	.L48:
 2801 04a0 0A000000 		.word	init.4222
 2802 04a4 2C010000 		.word	.LC12
 2803 04a8 40010000 		.word	.LC13
 2804              		.cfi_endproc
 2805              	.LFE7:
 2807              		.section	.rodata
 2808 016e 0000     		.align	2
 2809              	.LC14:
 2810 0170 20546173 		.ascii	" Task 8: iniciada.\012\000"
 2810      6B20383A 
 2810      20696E69 
 2810      63696164 
 2810      612E0A00 
 2811              		.text
 2812              		.align	2
 2813              		.global	Task8
 2815              	Task8:
 2816              	.LFB8:
 268:../lab12-queue.c **** 
 269:../lab12-queue.c **** void Task8( void ) // Cada vez que reciba un scancode lo escribe en el LCD
 270:../lab12-queue.c **** {
 2817              		.loc 1 270 0
 2818              		.cfi_startproc
 2819              		@ Function supports interworking.
 2820              		@ args = 0, pretend = 0, frame = 0
 2821              		@ frame_needed = 1, uses_anonymous_args = 0
 2822 04ac 0DC0A0E1 		mov	ip, sp
 2823              	.LCFI16:
 2824              		.cfi_def_cfa_register 12
 2825 04b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2826 04b4 04B04CE2 		sub	fp, ip, #4
 2827              		.cfi_offset 14, -8
 2828              		.cfi_offset 13, -12
 2829              		.cfi_offset 11, -16
 2830              	.LCFI17:
 2831              		.cfi_def_cfa 11, 4
 2832 04b8 08D04DE2 		sub	sp, sp, #8
 271:../lab12-queue.c **** 	static boolean init = TRUE;
 272:../lab12-queue.c **** 
 273:../lab12-queue.c **** 	if( init )
 2833              		.loc 1 273 0
 2834 04bc 6C309FE5 		ldr	r3, .L53
 2835 04c0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2836 04c4 000053E3 		cmp	r3, #0
 2837 04c8 0F00000A 		beq	.L51
 274:../lab12-queue.c **** 	{
 275:../lab12-queue.c **** 		init = FALSE;
 2838              		.loc 1 275 0
 2839 04cc 5C309FE5 		ldr	r3, .L53
 2840 04d0 0020A0E3 		mov	r2, #0
 2841 04d4 0020C3E5 		strb	r2, [r3, #0]
 276:../lab12-queue.c **** 		uart0_puts( " Task 8: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es necesario
 2842              		.loc 1 276 0
 2843 04d8 54009FE5 		ldr	r0, .L53+4
 2844 04dc FEFFFFEB 		bl	uart0_puts
 277:../lab12-queue.c **** 		lcd_clear();
 2845              		.loc 1 277 0
 2846 04e0 FEFFFFEB 		bl	lcd_clear
 278:../lab12-queue.c **** 		lcd_draw_box( 10, 10, 155, 230, BLACK, 5 );
 2847              		.loc 1 278 0
 2848 04e4 0F30A0E3 		mov	r3, #15
 2849 04e8 00308DE5 		str	r3, [sp, #0]
 2850 04ec 0530A0E3 		mov	r3, #5
 2851 04f0 04308DE5 		str	r3, [sp, #4]
 2852 04f4 0A00A0E3 		mov	r0, #10
 2853 04f8 0A10A0E3 		mov	r1, #10
 2854 04fc 9B20A0E3 		mov	r2, #155
 2855 0500 E630A0E3 		mov	r3, #230
 2856 0504 FEFFFFEB 		bl	lcd_draw_box
 2857 0508 050000EA 		b	.L50
 2858              	.L51:
 279:../lab12-queue.c **** 	}
 280:../lab12-queue.c **** 	else
 281:../lab12-queue.c **** 	{
 282:../lab12-queue.c **** 		lcd_puthex_x2(200, 115, BLACK, scancode );
 2859              		.loc 1 282 0
 2860 050c 24309FE5 		ldr	r3, .L53+8
 2861 0510 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2862 0514 C800A0E3 		mov	r0, #200
 2863 0518 7310A0E3 		mov	r1, #115
 2864 051c 0F20A0E3 		mov	r2, #15
 2865 0520 FEFFFFEB 		bl	lcd_puthex_x2
 2866              	.L50:
 283:../lab12-queue.c **** 	}
 284:../lab12-queue.c **** 
 285:../lab12-queue.c **** }
 2867              		.loc 1 285 0
 2868 0524 0CD04BE2 		sub	sp, fp, #12
 2869 0528 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2870 052c 1EFF2FE1 		bx	lr
 2871              	.L54:
 2872              		.align	2
 2873              	.L53:
 2874 0530 09000000 		.word	init.4226
 2875 0534 70010000 		.word	.LC14
 2876 0538 00000000 		.word	scancode
 2877              		.cfi_endproc
 2878              	.LFE8:
 2880              		.section	.rodata
 2881              		.align	2
 2882              	.LC15:
 2883 0184 20546173 		.ascii	" Task 9: iniciada.\012\000"
 2883      6B20393A 
 2883      20696E69 
 2883      63696164 
 2883      612E0A00 
 2884              		.text
 2885              		.align	2
 2886              		.global	Task9
 2888              	Task9:
 2889              	.LFB9:
 286:../lab12-queue.c **** 
 287:../lab12-queue.c **** void Task9( void ) // Escribe cada segundo transcurrido desde el inicio del programa en el LCD
 288:../lab12-queue.c **** {
 2890              		.loc 1 288 0
 2891              		.cfi_startproc
 2892              		@ Function supports interworking.
 2893              		@ args = 0, pretend = 0, frame = 0
 2894              		@ frame_needed = 1, uses_anonymous_args = 0
 2895 053c 0DC0A0E1 		mov	ip, sp
 2896              	.LCFI18:
 2897              		.cfi_def_cfa_register 12
 2898 0540 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2899 0544 04B04CE2 		sub	fp, ip, #4
 2900              		.cfi_offset 14, -8
 2901              		.cfi_offset 13, -12
 2902              		.cfi_offset 11, -16
 2903              	.LCFI19:
 2904              		.cfi_def_cfa 11, 4
 2905 0548 08D04DE2 		sub	sp, sp, #8
 289:../lab12-queue.c **** 	static boolean init = TRUE;
 290:../lab12-queue.c **** 	static uint32 og_time;
 291:../lab12-queue.c **** 	if( init )
 2906              		.loc 1 291 0
 2907 054c 88309FE5 		ldr	r3, .L58
 2908 0550 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2909 0554 000053E3 		cmp	r3, #0
 2910 0558 1100000A 		beq	.L56
 292:../lab12-queue.c **** 	{
 293:../lab12-queue.c **** 		init = FALSE;
 2911              		.loc 1 293 0
 2912 055c 78309FE5 		ldr	r3, .L58
 2913 0560 0020A0E3 		mov	r2, #0
 2914 0564 0020C3E5 		strb	r2, [r3, #0]
 294:../lab12-queue.c **** 		uart0_puts( " Task 9: iniciada.\n" );  /* Muestra un mensaje inicial en la UART0 (no es necesario
 2915              		.loc 1 294 0
 2916 0568 70009FE5 		ldr	r0, .L58+4
 2917 056c FEFFFFEB 		bl	uart0_puts
 295:../lab12-queue.c **** 		lcd_draw_box( 165, 10, 310, 230, BLACK, 5 );
 2918              		.loc 1 295 0
 2919 0570 0F30A0E3 		mov	r3, #15
 2920 0574 00308DE5 		str	r3, [sp, #0]
 2921 0578 0530A0E3 		mov	r3, #5
 2922 057c 04308DE5 		str	r3, [sp, #4]
 2923 0580 A500A0E3 		mov	r0, #165
 2924 0584 0A10A0E3 		mov	r1, #10
 2925 0588 54209FE5 		ldr	r2, .L58+8
 2926 058c E630A0E3 		mov	r3, #230
 2927 0590 FEFFFFEB 		bl	lcd_draw_box
 296:../lab12-queue.c **** 		og_time = 0;
 2928              		.loc 1 296 0
 2929 0594 4C309FE5 		ldr	r3, .L58+12
 2930 0598 0020A0E3 		mov	r2, #0
 2931 059c 002083E5 		str	r2, [r3, #0]
 2932 05a0 0A0000EA 		b	.L55
 2933              	.L56:
 297:../lab12-queue.c **** 	}
 298:../lab12-queue.c **** 	else
 299:../lab12-queue.c **** 	{
 300:../lab12-queue.c **** 		og_time++;
 2934              		.loc 1 300 0
 2935 05a4 3C309FE5 		ldr	r3, .L58+12
 2936 05a8 003093E5 		ldr	r3, [r3, #0]
 2937 05ac 012083E2 		add	r2, r3, #1
 2938 05b0 30309FE5 		ldr	r3, .L58+12
 2939 05b4 002083E5 		str	r2, [r3, #0]
 301:../lab12-queue.c **** 		lcd_putint_x2(125, 115, BLACK, og_time );
 2940              		.loc 1 301 0
 2941 05b8 28309FE5 		ldr	r3, .L58+12
 2942 05bc 003093E5 		ldr	r3, [r3, #0]
 2943 05c0 7D00A0E3 		mov	r0, #125
 2944 05c4 7310A0E3 		mov	r1, #115
 2945 05c8 0F20A0E3 		mov	r2, #15
 2946 05cc FEFFFFEB 		bl	lcd_putint_x2
 2947              	.L55:
 302:../lab12-queue.c **** 	}
 303:../lab12-queue.c **** 
 304:../lab12-queue.c **** }
 2948              		.loc 1 304 0
 2949 05d0 0CD04BE2 		sub	sp, fp, #12
 2950 05d4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2951 05d8 1EFF2FE1 		bx	lr
 2952              	.L59:
 2953              		.align	2
 2954              	.L58:
 2955 05dc 08000000 		.word	init.4230
 2956 05e0 84010000 		.word	.LC15
 2957 05e4 36010000 		.word	310
 2958 05e8 00000000 		.word	og_time.4231
 2959              		.cfi_endproc
 2960              	.LFE9:
 2962              		.align	2
 2963              		.global	isr_pb
 2965              	isr_pb:
 2966              	.LFB10:
 305:../lab12-queue.c **** /*******************************************************************/
 306:../lab12-queue.c **** 
 307:../lab12-queue.c **** void isr_pb( void )
 308:../lab12-queue.c **** {
 2967              		.loc 1 308 0
 2968              		.cfi_startproc
 2969              		@ Interrupt Service Routine.
 2970              		@ args = 0, pretend = 0, frame = 0
 2971              		@ frame_needed = 1, uses_anonymous_args = 0
 2972 05ec 04C02DE5 		str	ip, [sp, #-4]!
 2973 05f0 0DC0A0E1 		mov	ip, sp
 2974              	.LCFI20:
 2975              		.cfi_def_cfa_register 12
 2976 05f4 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 2977 05f8 04B04CE2 		sub	fp, ip, #4
 2978              		.cfi_offset 14, -8
 2979              		.cfi_offset 13, -12
 2980              		.cfi_offset 11, -16
 2981              		.cfi_offset 3, -20
 2982              		.cfi_offset 2, -24
 2983              		.cfi_offset 1, -28
 2984              		.cfi_offset 0, -32
 2985              	.LCFI21:
 2986              		.cfi_def_cfa 11, 4
 309:../lab12-queue.c ****     fifo_enqueue( Task7 );
 2987              		.loc 1 309 0
 2988 05fc 28009FE5 		ldr	r0, .L61
 2989 0600 FEFFFFEB 		bl	fifo_enqueue
 310:../lab12-queue.c ****     EXTINTPND = BIT_RIGHTPB | BIT_LEFTPB;
 2990              		.loc 1 310 0
 2991 0604 24309FE5 		ldr	r3, .L61+4
 2992 0608 0C20A0E3 		mov	r2, #12
 2993 060c 002083E5 		str	r2, [r3, #0]
 311:../lab12-queue.c ****     I_ISPC = BIT_PB;
 2994              		.loc 1 311 0
 2995 0610 1C309FE5 		ldr	r3, .L61+8
 2996 0614 0226A0E3 		mov	r2, #2097152
 2997 0618 002083E5 		str	r2, [r3, #0]
 312:../lab12-queue.c **** }
 2998              		.loc 1 312 0
 2999 061c 1CD04BE2 		sub	sp, fp, #28
 3000 0620 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 3001 0624 04C09DE4 		ldmfd	sp!, {ip}
 3002 0628 04F05EE2 		subs	pc, lr, #4
 3003              	.L62:
 3004              		.align	2
 3005              	.L61:
 3006 062c 00000000 		.word	Task7
 3007 0630 5400D201 		.word	30539860
 3008 0634 2400E001 		.word	31457316
 3009              		.cfi_endproc
 3010              	.LFE10:
 3012              		.align	2
 3013              		.global	isr_tick
 3015              	isr_tick:
 3016              	.LFB11:
 313:../lab12-queue.c **** 
 314:../lab12-queue.c **** 
 315:../lab12-queue.c **** void isr_tick( void )
 316:../lab12-queue.c **** {  
 3017              		.loc 1 316 0
 3018              		.cfi_startproc
 3019              		@ Interrupt Service Routine.
 3020              		@ args = 0, pretend = 0, frame = 0
 3021              		@ frame_needed = 1, uses_anonymous_args = 0
 3022 0638 04C02DE5 		str	ip, [sp, #-4]!
 3023 063c 0DC0A0E1 		mov	ip, sp
 3024              	.LCFI22:
 3025              		.cfi_def_cfa_register 12
 3026 0640 0FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, fp, ip, lr, pc}
 3027 0644 04B04CE2 		sub	fp, ip, #4
 3028              		.cfi_offset 14, -8
 3029              		.cfi_offset 13, -12
 3030              		.cfi_offset 11, -16
 3031              		.cfi_offset 3, -20
 3032              		.cfi_offset 2, -24
 3033              		.cfi_offset 1, -28
 3034              		.cfi_offset 0, -32
 3035              	.LCFI23:
 3036              		.cfi_def_cfa 11, 4
 317:../lab12-queue.c ****     static uint16 cont5ticks    = 5;
 318:../lab12-queue.c ****     static uint16 cont50ticks   = 50;
 319:../lab12-queue.c ****     static uint16 cont100ticks  = 100;
 320:../lab12-queue.c ****     static uint16 cont1000ticks = 1000;
 321:../lab12-queue.c ****     
 322:../lab12-queue.c ****     if( !(--cont5ticks) )
 3037              		.loc 1 322 0
 3038 0648 1C319FE5 		ldr	r3, .L68
 3039 064c B030D3E1 		ldrh	r3, [r3, #0]
 3040 0650 013043E2 		sub	r3, r3, #1
 3041 0654 0338A0E1 		mov	r3, r3, asl #16
 3042 0658 2328A0E1 		mov	r2, r3, lsr #16
 3043 065c 08319FE5 		ldr	r3, .L68
 3044 0660 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3045 0664 00319FE5 		ldr	r3, .L68
 3046 0668 B030D3E1 		ldrh	r3, [r3, #0]
 3047 066c 000053E3 		cmp	r3, #0
 3048 0670 0400001A 		bne	.L64
 323:../lab12-queue.c ****     {
 324:../lab12-queue.c ****         cont5ticks = 5;
 3049              		.loc 1 324 0
 3050 0674 F0309FE5 		ldr	r3, .L68
 3051 0678 0520A0E3 		mov	r2, #5
 3052 067c B020C3E1 		strh	r2, [r3, #0]	@ movhi
 325:../lab12-queue.c ****         fifo_enqueue( Task2 );        
 3053              		.loc 1 325 0
 3054 0680 E8009FE5 		ldr	r0, .L68+4
 3055 0684 FEFFFFEB 		bl	fifo_enqueue
 3056              	.L64:
 326:../lab12-queue.c ****     }
 327:../lab12-queue.c ****     if( !(--cont50ticks) )
 3057              		.loc 1 327 0
 3058 0688 E4309FE5 		ldr	r3, .L68+8
 3059 068c B030D3E1 		ldrh	r3, [r3, #0]
 3060 0690 013043E2 		sub	r3, r3, #1
 3061 0694 0338A0E1 		mov	r3, r3, asl #16
 3062 0698 2328A0E1 		mov	r2, r3, lsr #16
 3063 069c D0309FE5 		ldr	r3, .L68+8
 3064 06a0 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3065 06a4 C8309FE5 		ldr	r3, .L68+8
 3066 06a8 B030D3E1 		ldrh	r3, [r3, #0]
 3067 06ac 000053E3 		cmp	r3, #0
 3068 06b0 0400001A 		bne	.L65
 328:../lab12-queue.c ****     {
 329:../lab12-queue.c ****         cont50ticks = 50;
 3069              		.loc 1 329 0
 3070 06b4 B8309FE5 		ldr	r3, .L68+8
 3071 06b8 3220A0E3 		mov	r2, #50
 3072 06bc B020C3E1 		strh	r2, [r3, #0]	@ movhi
 330:../lab12-queue.c ****         fifo_enqueue( Task1 );
 3073              		.loc 1 330 0
 3074 06c0 B0009FE5 		ldr	r0, .L68+12
 3075 06c4 FEFFFFEB 		bl	fifo_enqueue
 3076              	.L65:
 331:../lab12-queue.c ****     }        
 332:../lab12-queue.c ****     if( !(--cont100ticks) )
 3077              		.loc 1 332 0
 3078 06c8 AC309FE5 		ldr	r3, .L68+16
 3079 06cc B030D3E1 		ldrh	r3, [r3, #0]
 3080 06d0 013043E2 		sub	r3, r3, #1
 3081 06d4 0338A0E1 		mov	r3, r3, asl #16
 3082 06d8 2328A0E1 		mov	r2, r3, lsr #16
 3083 06dc 98309FE5 		ldr	r3, .L68+16
 3084 06e0 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3085 06e4 90309FE5 		ldr	r3, .L68+16
 3086 06e8 B030D3E1 		ldrh	r3, [r3, #0]
 3087 06ec 000053E3 		cmp	r3, #0
 3088 06f0 0600001A 		bne	.L66
 333:../lab12-queue.c ****     {
 334:../lab12-queue.c ****         cont100ticks = 100;
 3089              		.loc 1 334 0
 3090 06f4 80309FE5 		ldr	r3, .L68+16
 3091 06f8 6420A0E3 		mov	r2, #100
 3092 06fc B020C3E1 		strh	r2, [r3, #0]	@ movhi
 335:../lab12-queue.c ****         fifo_enqueue( Task3 );        
 3093              		.loc 1 335 0
 3094 0700 78009FE5 		ldr	r0, .L68+20
 3095 0704 FEFFFFEB 		bl	fifo_enqueue
 336:../lab12-queue.c ****         fifo_enqueue( Task9 );
 3096              		.loc 1 336 0
 3097 0708 74009FE5 		ldr	r0, .L68+24
 3098 070c FEFFFFEB 		bl	fifo_enqueue
 3099              	.L66:
 337:../lab12-queue.c ****     }    
 338:../lab12-queue.c ****     if( !(--cont1000ticks) )
 3100              		.loc 1 338 0
 3101 0710 70309FE5 		ldr	r3, .L68+28
 3102 0714 B030D3E1 		ldrh	r3, [r3, #0]
 3103 0718 013043E2 		sub	r3, r3, #1
 3104 071c 0338A0E1 		mov	r3, r3, asl #16
 3105 0720 2328A0E1 		mov	r2, r3, lsr #16
 3106 0724 5C309FE5 		ldr	r3, .L68+28
 3107 0728 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3108 072c 54309FE5 		ldr	r3, .L68+28
 3109 0730 B030D3E1 		ldrh	r3, [r3, #0]
 3110 0734 000053E3 		cmp	r3, #0
 3111 0738 0400001A 		bne	.L67
 339:../lab12-queue.c ****     {
 340:../lab12-queue.c ****         cont1000ticks = 1000;
 3112              		.loc 1 340 0
 3113 073c 44309FE5 		ldr	r3, .L68+28
 3114 0740 FA2FA0E3 		mov	r2, #1000
 3115 0744 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 341:../lab12-queue.c ****         fifo_enqueue( Task4 );        
 3116              		.loc 1 341 0
 3117 0748 3C009FE5 		ldr	r0, .L68+32
 3118 074c FEFFFFEB 		bl	fifo_enqueue
 3119              	.L67:
 342:../lab12-queue.c ****     }   
 343:../lab12-queue.c ****     
 344:../lab12-queue.c ****     I_ISPC = BIT_TIMER0;
 3120              		.loc 1 344 0
 3121 0750 38309FE5 		ldr	r3, .L68+36
 3122 0754 022AA0E3 		mov	r2, #8192
 3123 0758 002083E5 		str	r2, [r3, #0]
 345:../lab12-queue.c **** };
 3124              		.loc 1 345 0
 3125 075c 1CD04BE2 		sub	sp, fp, #28
 3126 0760 0F689DE8 		ldmfd	sp, {r0, r1, r2, r3, fp, sp, lr}
 3127 0764 04C09DE4 		ldmfd	sp!, {ip}
 3128 0768 04F05EE2 		subs	pc, lr, #4
 3129              	.L69:
 3130              		.align	2
 3131              	.L68:
 3132 076c 00000000 		.word	cont5ticks.4238
 3133 0770 00000000 		.word	Task2
 3134 0774 02000000 		.word	cont50ticks.4239
 3135 0778 00000000 		.word	Task1
 3136 077c 04000000 		.word	cont100ticks.4240
 3137 0780 00000000 		.word	Task3
 3138 0784 00000000 		.word	Task9
 3139 0788 06000000 		.word	cont1000ticks.4241
 3140 078c 00000000 		.word	Task4
 3141 0790 2400E001 		.word	31457316
 3142              		.cfi_endproc
 3143              	.LFE11:
 3145              		.align	2
 3146              		.global	fifo_init
 3148              	fifo_init:
 3149              	.LFB12:
 346:../lab12-queue.c **** 
 347:../lab12-queue.c **** /*******************************************************************/
 348:../lab12-queue.c **** 
 349:../lab12-queue.c **** void fifo_init( void )
 350:../lab12-queue.c **** {
 3150              		.loc 1 350 0
 3151              		.cfi_startproc
 3152              		@ Function supports interworking.
 3153              		@ args = 0, pretend = 0, frame = 0
 3154              		@ frame_needed = 1, uses_anonymous_args = 0
 3155 0794 0DC0A0E1 		mov	ip, sp
 3156              	.LCFI24:
 3157              		.cfi_def_cfa_register 12
 3158 0798 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3159 079c 04B04CE2 		sub	fp, ip, #4
 3160              		.cfi_offset 14, -8
 3161              		.cfi_offset 13, -12
 3162              		.cfi_offset 11, -16
 3163              	.LCFI25:
 3164              		.cfi_def_cfa 11, 4
 351:../lab12-queue.c ****     fifo.head = 0;
 3165              		.loc 1 351 0
 3166 07a0 28309FE5 		ldr	r3, .L71
 3167 07a4 0020A0E3 		mov	r2, #0
 3168 07a8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 352:../lab12-queue.c ****     fifo.tail = 0;
 3169              		.loc 1 352 0
 3170 07ac 1C309FE5 		ldr	r3, .L71
 3171 07b0 0020A0E3 		mov	r2, #0
 3172 07b4 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 353:../lab12-queue.c ****     fifo.size = 0;
 3173              		.loc 1 353 0
 3174 07b8 10309FE5 		ldr	r3, .L71
 3175 07bc 0020A0E3 		mov	r2, #0
 3176 07c0 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 354:../lab12-queue.c **** }
 3177              		.loc 1 354 0
 3178 07c4 0CD04BE2 		sub	sp, fp, #12
 3179 07c8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3180 07cc 1EFF2FE1 		bx	lr
 3181              	.L72:
 3182              		.align	2
 3183              	.L71:
 3184 07d0 00000000 		.word	fifo
 3185              		.cfi_endproc
 3186              	.LFE12:
 3188              		.align	2
 3189              		.global	fifo_enqueue
 3191              	fifo_enqueue:
 3192              	.LFB13:
 355:../lab12-queue.c **** 
 356:../lab12-queue.c **** void fifo_enqueue( pf_t pf )
 357:../lab12-queue.c **** {
 3193              		.loc 1 357 0
 3194              		.cfi_startproc
 3195              		@ Function supports interworking.
 3196              		@ args = 0, pretend = 0, frame = 8
 3197              		@ frame_needed = 1, uses_anonymous_args = 0
 3198 07d4 0DC0A0E1 		mov	ip, sp
 3199              	.LCFI26:
 3200              		.cfi_def_cfa_register 12
 3201 07d8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3202 07dc 04B04CE2 		sub	fp, ip, #4
 3203              		.cfi_offset 14, -8
 3204              		.cfi_offset 13, -12
 3205              		.cfi_offset 11, -16
 3206              	.LCFI27:
 3207              		.cfi_def_cfa 11, 4
 3208 07e0 08D04DE2 		sub	sp, sp, #8
 3209 07e4 10000BE5 		str	r0, [fp, #-16]
 358:../lab12-queue.c ****     fifo.buffer[fifo.tail++] = pf;
 3210              		.loc 1 358 0
 3211 07e8 9C309FE5 		ldr	r3, .L75
 3212 07ec B230D3E1 		ldrh	r3, [r3, #2]	@ movhi
 3213 07f0 0338A0E1 		mov	r3, r3, asl #16
 3214 07f4 2338A0E1 		mov	r3, r3, lsr #16
 3215 07f8 0310A0E1 		mov	r1, r3
 3216 07fc 88209FE5 		ldr	r2, .L75
 3217 0800 021081E2 		add	r1, r1, #2
 3218 0804 10001BE5 		ldr	r0, [fp, #-16]
 3219 0808 010182E7 		str	r0, [r2, r1, asl #2]
 3220 080c 013083E2 		add	r3, r3, #1
 3221 0810 0338A0E1 		mov	r3, r3, asl #16
 3222 0814 2328A0E1 		mov	r2, r3, lsr #16
 3223 0818 6C309FE5 		ldr	r3, .L75
 3224 081c B220C3E1 		strh	r2, [r3, #2]	@ movhi
 359:../lab12-queue.c ****     if( fifo.tail == BUFFER_LEN )
 3225              		.loc 1 359 0
 3226 0820 64309FE5 		ldr	r3, .L75
 3227 0824 B230D3E1 		ldrh	r3, [r3, #2]	@ movhi
 3228 0828 0338A0E1 		mov	r3, r3, asl #16
 3229 082c 2338A0E1 		mov	r3, r3, lsr #16
 3230 0830 020C53E3 		cmp	r3, #512
 3231 0834 0200001A 		bne	.L74
 360:../lab12-queue.c ****         fifo.tail = 0;
 3232              		.loc 1 360 0
 3233 0838 4C309FE5 		ldr	r3, .L75
 3234 083c 0020A0E3 		mov	r2, #0
 3235 0840 B220C3E1 		strh	r2, [r3, #2]	@ movhi
 3236              	.L74:
 361:../lab12-queue.c ****     INT_DISABLE;
 3237              		.loc 1 361 0
 3238              	@ 361 "../lab12-queue.c" 1
 3239 0844 00000FE1 		mrs   r0, cpsr              
 3240 0848 04002DE5 	stmfd sp!, {r0}             
 3241 084c C00080E3 	orr   r0, r0, #0b11000000   
 3242 0850 00F021E1 	msr   cpsr_c, r0              
 3243              	@ 0 "" 2
 362:../lab12-queue.c ****     fifo.size++;
 3244              		.loc 1 362 0
 3245 0854 30309FE5 		ldr	r3, .L75
 3246 0858 B430D3E1 		ldrh	r3, [r3, #4]	@ movhi
 3247 085c 0338A0E1 		mov	r3, r3, asl #16
 3248 0860 2338A0E1 		mov	r3, r3, lsr #16
 3249 0864 013083E2 		add	r3, r3, #1
 3250 0868 0338A0E1 		mov	r3, r3, asl #16
 3251 086c 2328A0E1 		mov	r2, r3, lsr #16
 3252 0870 14309FE5 		ldr	r3, .L75
 3253 0874 B420C3E1 		strh	r2, [r3, #4]	@ movhi
 363:../lab12-queue.c ****     INT_ENABLE;
 3254              		.loc 1 363 0
 3255              	@ 363 "../lab12-queue.c" 1
 3256 0878 04009DE4 		ldmfd sp!, {r0}             
 3257 087c 00F021E1 	msr   cpsr_c, r0              
 3258              	@ 0 "" 2
 364:../lab12-queue.c **** }
 3259              		.loc 1 364 0
 3260 0880 0CD04BE2 		sub	sp, fp, #12
 3261 0884 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3262 0888 1EFF2FE1 		bx	lr
 3263              	.L76:
 3264              		.align	2
 3265              	.L75:
 3266 088c 00000000 		.word	fifo
 3267              		.cfi_endproc
 3268              	.LFE13:
 3270              		.align	2
 3271              		.global	fifo_dequeue
 3273              	fifo_dequeue:
 3274              	.LFB14:
 365:../lab12-queue.c **** 
 366:../lab12-queue.c **** pf_t fifo_dequeue( void )
 367:../lab12-queue.c **** {
 3275              		.loc 1 367 0
 3276              		.cfi_startproc
 3277              		@ Function supports interworking.
 3278              		@ args = 0, pretend = 0, frame = 8
 3279              		@ frame_needed = 1, uses_anonymous_args = 0
 3280 0890 0DC0A0E1 		mov	ip, sp
 3281              	.LCFI28:
 3282              		.cfi_def_cfa_register 12
 3283 0894 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3284 0898 04B04CE2 		sub	fp, ip, #4
 3285              		.cfi_offset 14, -8
 3286              		.cfi_offset 13, -12
 3287              		.cfi_offset 11, -16
 3288              	.LCFI29:
 3289              		.cfi_def_cfa 11, 4
 3290 089c 08D04DE2 		sub	sp, sp, #8
 368:../lab12-queue.c ****     pf_t pf;
 369:../lab12-queue.c ****     
 370:../lab12-queue.c ****     pf = fifo.buffer[fifo.head++];
 3291              		.loc 1 370 0
 3292 08a0 A4309FE5 		ldr	r3, .L79
 3293 08a4 B030D3E1 		ldrh	r3, [r3, #0]	@ movhi
 3294 08a8 0338A0E1 		mov	r3, r3, asl #16
 3295 08ac 2338A0E1 		mov	r3, r3, lsr #16
 3296 08b0 0310A0E1 		mov	r1, r3
 3297 08b4 90209FE5 		ldr	r2, .L79
 3298 08b8 021081E2 		add	r1, r1, #2
 3299 08bc 012192E7 		ldr	r2, [r2, r1, asl #2]
 3300 08c0 10200BE5 		str	r2, [fp, #-16]
 3301 08c4 013083E2 		add	r3, r3, #1
 3302 08c8 0338A0E1 		mov	r3, r3, asl #16
 3303 08cc 2328A0E1 		mov	r2, r3, lsr #16
 3304 08d0 74309FE5 		ldr	r3, .L79
 3305 08d4 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 371:../lab12-queue.c ****     if( fifo.head == BUFFER_LEN )
 3306              		.loc 1 371 0
 3307 08d8 6C309FE5 		ldr	r3, .L79
 3308 08dc B030D3E1 		ldrh	r3, [r3, #0]	@ movhi
 3309 08e0 0338A0E1 		mov	r3, r3, asl #16
 3310 08e4 2338A0E1 		mov	r3, r3, lsr #16
 3311 08e8 020C53E3 		cmp	r3, #512
 3312 08ec 0200001A 		bne	.L78
 372:../lab12-queue.c ****         fifo.head = 0;
 3313              		.loc 1 372 0
 3314 08f0 54309FE5 		ldr	r3, .L79
 3315 08f4 0020A0E3 		mov	r2, #0
 3316 08f8 B020C3E1 		strh	r2, [r3, #0]	@ movhi
 3317              	.L78:
 373:../lab12-queue.c ****     INT_DISABLE;
 3318              		.loc 1 373 0
 3319              	@ 373 "../lab12-queue.c" 1
 3320 08fc 00000FE1 		mrs   r0, cpsr              
 3321 0900 04002DE5 	stmfd sp!, {r0}             
 3322 0904 C00080E3 	orr   r0, r0, #0b11000000   
 3323 0908 00F021E1 	msr   cpsr_c, r0              
 3324              	@ 0 "" 2
 374:../lab12-queue.c ****     fifo.size--;
 3325              		.loc 1 374 0
 3326 090c 38309FE5 		ldr	r3, .L79
 3327 0910 B430D3E1 		ldrh	r3, [r3, #4]	@ movhi
 3328 0914 0338A0E1 		mov	r3, r3, asl #16
 3329 0918 2338A0E1 		mov	r3, r3, lsr #16
 3330 091c 013043E2 		sub	r3, r3, #1
 3331 0920 0338A0E1 		mov	r3, r3, asl #16
 3332 0924 2328A0E1 		mov	r2, r3, lsr #16
 3333 0928 1C309FE5 		ldr	r3, .L79
 3334 092c B420C3E1 		strh	r2, [r3, #4]	@ movhi
 375:../lab12-queue.c ****     INT_ENABLE;
 3335              		.loc 1 375 0
 3336              	@ 375 "../lab12-queue.c" 1
 3337 0930 04009DE4 		ldmfd sp!, {r0}             
 3338 0934 00F021E1 	msr   cpsr_c, r0              
 3339              	@ 0 "" 2
 376:../lab12-queue.c ****     return pf;
 3340              		.loc 1 376 0
 3341 0938 10301BE5 		ldr	r3, [fp, #-16]
 377:../lab12-queue.c **** }
 3342              		.loc 1 377 0
 3343 093c 0300A0E1 		mov	r0, r3
 3344 0940 0CD04BE2 		sub	sp, fp, #12
 3345 0944 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3346 0948 1EFF2FE1 		bx	lr
 3347              	.L80:
 3348              		.align	2
 3349              	.L79:
 3350 094c 00000000 		.word	fifo
 3351              		.cfi_endproc
 3352              	.LFE14:
 3354              		.align	2
 3355              		.global	fifo_is_empty
 3357              	fifo_is_empty:
 3358              	.LFB15:
 378:../lab12-queue.c **** 
 379:../lab12-queue.c **** boolean fifo_is_empty( void )
 380:../lab12-queue.c **** {
 3359              		.loc 1 380 0
 3360              		.cfi_startproc
 3361              		@ Function supports interworking.
 3362              		@ args = 0, pretend = 0, frame = 0
 3363              		@ frame_needed = 1, uses_anonymous_args = 0
 3364 0950 0DC0A0E1 		mov	ip, sp
 3365              	.LCFI30:
 3366              		.cfi_def_cfa_register 12
 3367 0954 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3368 0958 04B04CE2 		sub	fp, ip, #4
 3369              		.cfi_offset 14, -8
 3370              		.cfi_offset 13, -12
 3371              		.cfi_offset 11, -16
 3372              	.LCFI31:
 3373              		.cfi_def_cfa 11, 4
 381:../lab12-queue.c ****     return (fifo.size == 0);
 3374              		.loc 1 381 0
 3375 095c 28309FE5 		ldr	r3, .L82
 3376 0960 B430D3E1 		ldrh	r3, [r3, #4]	@ movhi
 3377 0964 0338A0E1 		mov	r3, r3, asl #16
 3378 0968 2338A0E1 		mov	r3, r3, lsr #16
 3379 096c 000053E3 		cmp	r3, #0
 3380 0970 0030A013 		movne	r3, #0
 3381 0974 0130A003 		moveq	r3, #1
 3382 0978 FF3003E2 		and	r3, r3, #255
 382:../lab12-queue.c **** }
 3383              		.loc 1 382 0
 3384 097c 0300A0E1 		mov	r0, r3
 3385 0980 0CD04BE2 		sub	sp, fp, #12
 3386 0984 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3387 0988 1EFF2FE1 		bx	lr
 3388              	.L83:
 3389              		.align	2
 3390              	.L82:
 3391 098c 00000000 		.word	fifo
 3392              		.cfi_endproc
 3393              	.LFE15:
 3395              		.align	2
 3396              		.global	fifo_is_full
 3398              	fifo_is_full:
 3399              	.LFB16:
 383:../lab12-queue.c **** 
 384:../lab12-queue.c **** boolean fifo_is_full( void )
 385:../lab12-queue.c **** {
 3400              		.loc 1 385 0
 3401              		.cfi_startproc
 3402              		@ Function supports interworking.
 3403              		@ args = 0, pretend = 0, frame = 0
 3404              		@ frame_needed = 1, uses_anonymous_args = 0
 3405 0990 0DC0A0E1 		mov	ip, sp
 3406              	.LCFI32:
 3407              		.cfi_def_cfa_register 12
 3408 0994 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3409 0998 04B04CE2 		sub	fp, ip, #4
 3410              		.cfi_offset 14, -8
 3411              		.cfi_offset 13, -12
 3412              		.cfi_offset 11, -16
 3413              	.LCFI33:
 3414              		.cfi_def_cfa 11, 4
 386:../lab12-queue.c ****     return (fifo.size == BUFFER_LEN-1);
 3415              		.loc 1 386 0
 3416 099c 2C309FE5 		ldr	r3, .L85
 3417 09a0 B430D3E1 		ldrh	r3, [r3, #4]	@ movhi
 3418 09a4 0338A0E1 		mov	r3, r3, asl #16
 3419 09a8 2328A0E1 		mov	r2, r3, lsr #16
 3420 09ac 20309FE5 		ldr	r3, .L85+4
 3421 09b0 030052E1 		cmp	r2, r3
 3422 09b4 0030A013 		movne	r3, #0
 3423 09b8 0130A003 		moveq	r3, #1
 3424 09bc FF3003E2 		and	r3, r3, #255
 387:../lab12-queue.c **** }
 3425              		.loc 1 387 0
 3426 09c0 0300A0E1 		mov	r0, r3
 3427 09c4 0CD04BE2 		sub	sp, fp, #12
 3428 09c8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3429 09cc 1EFF2FE1 		bx	lr
 3430              	.L86:
 3431              		.align	2
 3432              	.L85:
 3433 09d0 00000000 		.word	fifo
 3434 09d4 FF010000 		.word	511
 3435              		.cfi_endproc
 3436              	.LFE16:
 3438              		.data
 3439              		.align	1
 3442              	cont5ticks.4238:
 3443 0000 0500     		.short	5
 3444              		.align	1
 3447              	cont50ticks.4239:
 3448 0002 3200     		.short	50
 3449              		.align	1
 3452              	cont100ticks.4240:
 3453 0004 6400     		.short	100
 3454              		.align	1
 3457              	cont1000ticks.4241:
 3458 0006 E803     		.short	1000
 3461              	init.4230:
 3462 0008 01       		.byte	1
 3463              		.bss
 3464              		.align	2
 3465              	og_time.4231:
 3466 0000 00000000 		.space	4
 3467              		.data
 3470              	init.4226:
 3471 0009 01       		.byte	1
 3474              	init.4222:
 3475 000a 01       		.byte	1
 3478              	init.4218:
 3479 000b 01       		.byte	1
 3482              	init.4214:
 3483 000c 01       		.byte	1
 3486              	init.4209:
 3487 000d 01       		.byte	1
 3488              		.bss
 3489              		.align	2
 3490              	ticks.4210:
 3491 0004 00000000 		.space	4
 3492              		.data
 3495              	init.4204:
 3496 000e 01       		.byte	1
 3499              	init.4191:
 3500 000f 01       		.byte	1
 3501              		.bss
 3502              	state.4196:
 3503 0008 00       		.space	1
 3504 0009 000000   		.data
 3507              	init.4187:
 3508 0010 01       		.byte	1
 3509 0011 00       		.text
 3510              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 lab12-queue.c
                            *COM*:00000808 fifo
                            *COM*:00000001 scancode
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2143   .rodata:00000000 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2152   .text:00000000 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2155   .text:00000000 main
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3148   .text:00000794 fifo_init
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2267   .text:000000c8 Task1
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2331   .text:00000130 Task2
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2466   .text:00000250 Task3
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2552   .text:000002f4 Task4
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2631   .text:00000388 Task5
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2697   .text:000003fc Task6
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2759   .text:00000458 Task7
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2815   .text:000004ac Task8
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2888   .text:0000053c Task9
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3273   .text:00000890 fifo_dequeue
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3357   .text:00000950 fifo_is_empty
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2252   .text:000000b8 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2965   .text:000005ec isr_pb
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3015   .text:00000638 isr_tick
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2264   .text:000000c8 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2318   .text:00000128 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3507   .data:00000010 init.4187
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2328   .text:00000130 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3191   .text:000007d4 fifo_enqueue
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2442   .text:00000234 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3499   .data:0000000f init.4191
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3502   .bss:00000008 state.4196
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2463   .text:00000250 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2534   .text:000002e4 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3495   .data:0000000e init.4204
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2549   .text:000002f4 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2612   .text:00000374 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3486   .data:0000000d init.4209
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3490   .bss:00000004 ticks.4210
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2628   .text:00000388 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2681   .text:000003e8 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3482   .data:0000000c init.4214
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2694   .text:000003fc $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2741   .text:0000044c $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3478   .data:0000000b init.4218
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2756   .text:00000458 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2801   .text:000004a0 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3474   .data:0000000a init.4222
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2812   .text:000004ac $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2874   .text:00000530 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3470   .data:00000009 init.4226
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2885   .text:0000053c $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2955   .text:000005dc $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3461   .data:00000008 init.4230
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3465   .bss:00000000 og_time.4231
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:2962   .text:000005ec $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3006   .text:0000062c $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3012   .text:00000638 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3132   .text:0000076c $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3442   .data:00000000 cont5ticks.4238
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3447   .data:00000002 cont50ticks.4239
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3452   .data:00000004 cont100ticks.4240
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3457   .data:00000006 cont1000ticks.4241
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3145   .text:00000794 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3184   .text:000007d0 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3188   .text:000007d4 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3266   .text:0000088c $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3270   .text:00000890 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3350   .text:0000094c $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3354   .text:00000950 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3391   .text:0000098c $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3395   .text:00000990 $a
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3398   .text:00000990 fifo_is_full
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3433   .text:000009d0 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3439   .data:00000000 $d
C:\Users\guill\AppData\Local\Temp\ccj3Y26P.s:3464   .bss:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sys_init
timers_init
uart0_init
leds_init
segs_init
rtc_init
pbs_init
keypad_init
lcd_init
lcd_clear
lcd_on
uart0_puts
pbs_open
timer0_open_tick
sleep
led_on
led_off
led_toggle
keypad_pressed
keypad_scan
rtc_gettime
uart0_putint
uart0_putchar
uart0_puthex
segs_putchar
lcd_draw_box
lcd_puthex_x2
lcd_putint_x2
